package com.gmail.andrewahughes.hex20190322;

import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;

/**
 * Created by Andrew Hughes on 13/09/2019.
 */

 public class FlowerDB
{
    ShapeRenderer renderer;
    int index;
    int ox;
    int oy;
    float scale;
    static Color primaryColour;
   static Color secondaryColour;
    static Color tertiaryColour;
    static Color contrastColour;




    public FlowerDB(ShapeRenderer renderer, int index, int x, int y,float scale)
{
this.renderer = renderer;
this.index =index;
this.ox = x;
this.oy =y;
this.scale=scale;
}
    static public void draw(ShapeRenderer renderer, int index, float x, float y,float scale)
    {
//index should be from 0 to 30
                setColour(index);
                renderer.setColor(contrastColour);
                renderer.circle(x,y,scale);
                drawFlower(renderer, index, x, y, scale);

    }


            static public void setColour(int index)
            {
                switch (index) {
                    case 0:
                        primaryColour = new Color(255,250,3,1);//light yellow
                        secondaryColour = new Color(79,45,0,1);//dark red
                        tertiaryColour = new Color(255,187,12,1);//light orange
                        contrastColour = new Color(59,94,250,1);//light teal
                        break;
                    case 1:
                        primaryColour = new Color(123,0,0,1);//dark red
                        secondaryColour = new Color(134,0,0,1);//dark red
                        tertiaryColour = new Color(136,0,0,1);//dark red
                        contrastColour = new Color(124,255,255,1);//light cyan
                        break;
                    case 2:
                        primaryColour = new Color(255,126,13,1);//orange
                        secondaryColour = new Color(255,84,20,1);//red
                        tertiaryColour = new Color(255,196,15,1);//light orange
                        contrastColour = new Color(0,120,239,1);//teal
                        break;
                    case 3:
                        primaryColour = new Color(191,0,0,1);//dark red
                        secondaryColour = new Color(234,130,0,1);//orange
                        tertiaryColour = new Color(255,0,0,1);//red
                        contrastColour = new Color(28,212,255,1);//light teal
                        break;
                    case 4:
                        primaryColour = new Color(255,255,255,1);//white
                        secondaryColour = new Color(219,167,0,1);//orange
                        tertiaryColour = new Color(255,255,198,1);//light yellow
                        contrastColour = new Color(12,29,104,1);//dark blue
                        break;
                    case 5:
                        primaryColour = new Color(125,187,255,1);//light teal
                        secondaryColour = new Color(0,0,181,1);//dark blue
                        tertiaryColour = new Color(75,94,255,1);//light blue
                        contrastColour = new Color(188,161,25,1);//yellow
                        break;
                    case 6:
                        primaryColour = new Color(162,162,255,1);//light teal
                        secondaryColour = new Color(0,120,189,1);//teal
                        tertiaryColour = new Color(115,115,255,1);//light teal
                        contrastColour = new Color(163,123,22,1);//orange
                        break;
                    case 7:
                        primaryColour = new Color(255,240,255,1);//white
                        secondaryColour = new Color(255,255,255,1);//white
                        tertiaryColour = new Color(3,2,0,1);//black
                        contrastColour = new Color(84,89,85,1);//green
                        break;
                    case 8:
                        primaryColour = new Color(151,151,255,1);//light teal
                        secondaryColour = new Color(151,151,255,1);//light teal
                        tertiaryColour = new Color(177,0,0,1);//dark red
                        contrastColour = new Color(95,154,85,1);//green
                        break;
                    case 9:
                        primaryColour = new Color(255,157,255,1);//light magenta
                        secondaryColour = new Color(255,255,140,1);//light yellow
                        tertiaryColour = new Color(255,216,255,1);//light magenta
                        contrastColour = new Color(0,46,38,1);//dark green
                        break;
                    case 10:
                        primaryColour = new Color(193,193,255,1);//light teal
                        secondaryColour = new Color(242,242,255,1);//white
                        tertiaryColour = new Color(133,133,255,1);//light teal
                        contrastColour = new Color(66,66,0,1);//dark red
                        break;
                    case 11:
                        primaryColour = new Color(69,0,102,1);//dark blue
                        secondaryColour = new Color(255,255,225,1);//light yellow
                        tertiaryColour = new Color(104,0,174,1);//purple
                        contrastColour = new Color(112,170,88,1);//yellow green
                        break;
                    case 12:
                        primaryColour = new Color(255,181,255,1);//light magenta
                        secondaryColour = new Color(126,193,0,1);//yellow green
                        tertiaryColour = new Color(255,227,255,1);//white
                        contrastColour = new Color(43,55,85,1);//dark blue
                        break;
                    case 13:
                        primaryColour = new Color(255,14,163,1);//light magenta
                        secondaryColour = new Color(0,128,52,1);//dark green
                        tertiaryColour = new Color(255,8,8,1);//red
                        contrastColour = new Color(85,205,181,1);//light cyan
                        break;
                    case 14:
                        primaryColour = new Color(244,255,194,1);//light yellow
                        secondaryColour = new Color(255,243,157,1);//light yellow
                        tertiaryColour = new Color(255,255,195,1);//light yellow
                        contrastColour = new Color(4,4,73,1);//dark blue
                        break;
                    case 15:
                        primaryColour = new Color(195,0,0,1);//dark red
                        secondaryColour = new Color(255,238,238,1);//light magenta
                        tertiaryColour = new Color(255,255,186,1);//light yellow
                        contrastColour = new Color(20,91,114,1);//blue
                        break;
                    case 16:
                        primaryColour = new Color(255,243,255,1);//white
                        secondaryColour = new Color(111,0,240,1);//purple
                        tertiaryColour = new Color(190,76,255,1);//light purple
                        contrastColour = new Color(70,149,5,1);//green
                        break;
                    case 17:
                        primaryColour = new Color(208,208,255,1);//light teal
                        secondaryColour = new Color(85,85,255,1);//light blue
                        tertiaryColour = new Color(255,255,177,1);//light yellow
                        contrastColour = new Color(72,72,26,1);//dark red
                        break;
                    case 18:
                        primaryColour = new Color(251,169,0,1);//light orange
                        secondaryColour = new Color(175,0,0,1);//dark red
                        tertiaryColour = new Color(255,255,60,1);//light yellow
                        contrastColour = new Color(28,114,235,1);//teal
                        break;
                    case 19:
                        primaryColour = new Color(255,172,105,1);//light orange
                        secondaryColour = new Color(199,255,109,1);//light yellow green
                        tertiaryColour = new Color(153,255,94,1);//light yellow green
                        contrastColour = new Color(53,28,152,1);//blue
                        break;
                    case 20:
                        primaryColour = new Color(255,209,15,1);//light orange
                        secondaryColour = new Color(255,255,35,1);//light yellow
                        tertiaryColour = new Color(255,146,23,1);//light orange
                        contrastColour = new Color(0,52,231,1);//blue
                        break;
                    case 21:
                        primaryColour = new Color(238,204,0,1);//light yellow
                        secondaryColour = new Color(255,255,189,1);//light yellow
                        tertiaryColour = new Color(161,7,0,1);//dark orange
                        contrastColour = new Color(37,100,192,1);//teal
                        break;
                    case 22:
                        primaryColour = new Color(255,202,255,1);//light magenta
                        secondaryColour = new Color(255,255,35,1);//light yellow
                        tertiaryColour = new Color(179,78,255,1);//light purple
                        contrastColour = new Color(25,77,73,1);//dark green
                        break;
                    case 23:
                        primaryColour = new Color(255,255,200,1);//light yellow
                        secondaryColour = new Color(255,174,255,1);//light magenta
                        tertiaryColour = new Color(184,32,255,1);//light purple
                        contrastColour = new Color(24,101,18,1);//dark green
                        break;
                    case 24:
                        primaryColour = new Color(255,229,3,1);//light yellow
                        secondaryColour = new Color(81,0,173,1);//purple
                        tertiaryColour = new Color(66,57,0,1);//dark red
                        contrastColour = new Color(121,160,196,1);//light cyan
                        break;
                    case 25:
                        primaryColour = new Color(243,170,255,1);//light magenta
                        secondaryColour = new Color(76,0,190,1);//purple
                        tertiaryColour = new Color(255,255,193,1);//light yellow
                        contrastColour = new Color(64,113,42,1);//green
                        break;
                    case 26:
                        primaryColour = new Color(122,0,0,1);//dark red
                        secondaryColour = new Color(71,0,0,1);//dark red
                        tertiaryColour = new Color(255,179,55,1);//light orange
                        contrastColour = new Color(106,195,237,1);//light teal
                        break;
                    case 27:
                        primaryColour = new Color(255,184,184,1);//light magenta
                        secondaryColour = new Color(255,4,4,1);//red
                        tertiaryColour = new Color(255,145,145,1);//light magenta
                        contrastColour = new Color(0,144,144,1);//green
                        break;
                    case 28:
                        primaryColour = new Color(29,214,255,1);//light teal
                        secondaryColour = new Color(0,165,216,1);//teal
                        tertiaryColour = new Color(93,248,255,1);//light cyan
                        contrastColour = new Color(214,46,13,1);//red
                        break;
                    case 29:
                        primaryColour = new Color(238,127,255,1);//light magenta
                        secondaryColour = new Color(150,0,254,1);//light purple
                        tertiaryColour = new Color(255,195,255,1);//light magenta
                        contrastColour = new Color(41,148,0,1);//dark green
                        break;
                    case 30:
                        primaryColour = new Color(255,255,220,1);//light yellow
                        secondaryColour = new Color(255,255,169,1);//light yellow
                        tertiaryColour = new Color(251,255,66,1);//light yellow
                        contrastColour = new Color(1,0,103,1);//dark blue
                        break;
                }
            }




    static public void drawFlower(ShapeRenderer renderer, int index, float ox, float oy,float scale)//
    {
ox=ox-320*scale;
oy=oy-240*scale;
        if(index==0)
        {
// sunflower 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*423,oy+scale*181,ox+scale*393,oy+scale*117); renderer.triangle(ox+scale*216,oy+scale*300,ox+scale*217,oy+scale*181,ox+scale*177,oy+scale*238); renderer.triangle(ox+scale*424,oy+scale*300,ox+scale*320,oy+scale*359,ox+scale*390,oy+scale*365); renderer.triangle(ox+scale*424,oy+scale*300,ox+scale*423,oy+scale*181,ox+scale*463,oy+scale*238); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*217,oy+scale*181,ox+scale*247,oy+scale*117); renderer.triangle(ox+scale*216,oy+scale*300,ox+scale*320,oy+scale*359,ox+scale*250,oy+scale*365); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*423,oy+scale*181); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*423,oy+scale*181,ox+scale*424,oy+scale*300); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*300,ox+scale*217,oy+scale*181); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*217,oy+scale*181,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*300,ox+scale*320,oy+scale*359); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*359,ox+scale*216,oy+scale*300); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*377,oy+scale*147,ox+scale*442,oy+scale*169,ox+scale*429,oy+scale*237); renderer.triangle(ox+scale*211,oy+scale*237,ox+scale*198,oy+scale*169,ox+scale*263,oy+scale*147); renderer.triangle(ox+scale*372,oy+scale*336,ox+scale*320,oy+scale*381,ox+scale*268,oy+scale*336); renderer.triangle(ox+scale*429,oy+scale*237,ox+scale*441,oy+scale*310,ox+scale*368,oy+scale*340); renderer.triangle(ox+scale*263,oy+scale*147,ox+scale*320,oy+scale*100,ox+scale*382,oy+scale*148); renderer.triangle(ox+scale*268,oy+scale*336,ox+scale*199,oy+scale*310,ox+scale*209,oy+scale*232);
        }

        else if (index==1)
        {
            //sunflower 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*404,oy+scale*156,ox+scale*376,oy+scale*108); renderer.triangle(ox+scale*200,oy+scale*240,ox+scale*236,oy+scale*156,ox+scale*188,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*360,ox+scale*236,oy+scale*324,ox+scale*264,oy+scale*372); renderer.triangle(ox+scale*440,oy+scale*240,ox+scale*404,oy+scale*324,ox+scale*452,oy+scale*296); renderer.triangle(ox+scale*440,oy+scale*240,ox+scale*404,oy+scale*156,ox+scale*452,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*236,oy+scale*156,ox+scale*264,oy+scale*108); renderer.triangle(ox+scale*200,oy+scale*240,ox+scale*236,oy+scale*324,ox+scale*188,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*360,ox+scale*404,oy+scale*324,ox+scale*376,oy+scale*372); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*404,oy+scale*156); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*404,oy+scale*156,ox+scale*440,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*200,oy+scale*240,ox+scale*236,oy+scale*156); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*236,oy+scale*156,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*360,ox+scale*236,oy+scale*324); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*236,oy+scale*324,ox+scale*200,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*440,oy+scale*240,ox+scale*404,oy+scale*324); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*404,oy+scale*324,ox+scale*320,oy+scale*360); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*364,oy+scale*140,ox+scale*420,oy+scale*140,ox+scale*420,oy+scale*196); renderer.triangle(ox+scale*220,oy+scale*196,ox+scale*220,oy+scale*140,ox+scale*276,oy+scale*140); renderer.triangle(ox+scale*276,oy+scale*340,ox+scale*220,oy+scale*340,ox+scale*220,oy+scale*284); renderer.triangle(ox+scale*420,oy+scale*284,ox+scale*420,oy+scale*340,ox+scale*364,oy+scale*340); renderer.triangle(ox+scale*420,oy+scale*196,ox+scale*460,oy+scale*240,ox+scale*420,oy+scale*288); renderer.triangle(ox+scale*276,oy+scale*140,ox+scale*320,oy+scale*100,ox+scale*368,oy+scale*140); renderer.triangle(ox+scale*220,oy+scale*284,ox+scale*180,oy+scale*240,ox+scale*220,oy+scale*192); renderer.triangle(ox+scale*364,oy+scale*340,ox+scale*320,oy+scale*380,ox+scale*272,oy+scale*340);

        }


        else if (index==2)
        {
            //sunflower 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*390,oy+scale*144,ox+scale*365,oy+scale*104); renderer.triangle(ox+scale*206,oy+scale*203,ox+scale*250,oy+scale*144,ox+scale*205,oy+scale*155); renderer.triangle(ox+scale*249,oy+scale*337,ox+scale*207,oy+scale*277,ox+scale*203,oy+scale*323); renderer.triangle(ox+scale*391,oy+scale*337,ox+scale*320,oy+scale*359,ox+scale*363,oy+scale*377); renderer.triangle(ox+scale*434,oy+scale*203,ox+scale*433,oy+scale*277,ox+scale*463,oy+scale*241); renderer.triangle(ox+scale*434,oy+scale*203,ox+scale*390,oy+scale*144,ox+scale*435,oy+scale*155); renderer.triangle(ox+scale*320,oy+scale*120,ox+scale*250,oy+scale*144,ox+scale*275,oy+scale*104); renderer.triangle(ox+scale*206,oy+scale*203,ox+scale*207,oy+scale*277,ox+scale*177,oy+scale*241); renderer.triangle(ox+scale*249,oy+scale*337,ox+scale*320,oy+scale*359,ox+scale*277,oy+scale*377); renderer.triangle(ox+scale*391,oy+scale*337,ox+scale*433,oy+scale*277,ox+scale*437,oy+scale*323); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*390,oy+scale*144); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*390,oy+scale*144,ox+scale*434,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*206,oy+scale*203,ox+scale*250,oy+scale*144); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*250,oy+scale*144,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*249,oy+scale*337,ox+scale*207,oy+scale*277); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*207,oy+scale*277,ox+scale*206,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*391,oy+scale*337,ox+scale*320,oy+scale*359); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*359,ox+scale*249,oy+scale*337); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*434,oy+scale*203,ox+scale*433,oy+scale*277); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*433,oy+scale*277,ox+scale*391,oy+scale*337); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*356,oy+scale*137,ox+scale*403,oy+scale*126,ox+scale*407,oy+scale*174); renderer.triangle(ox+scale*233,oy+scale*174,ox+scale*237,oy+scale*126,ox+scale*284,oy+scale*137); renderer.triangle(ox+scale*231,oy+scale*303,ox+scale*186,oy+scale*284,ox+scale*211,oy+scale*242); renderer.triangle(ox+scale*352,oy+scale*344,ox+scale*320,oy+scale*381,ox+scale*288,oy+scale*344); renderer.triangle(ox+scale*429,oy+scale*242,ox+scale*454,oy+scale*284,ox+scale*409,oy+scale*303); renderer.triangle(ox+scale*407,oy+scale*174,ox+scale*453,oy+scale*197,ox+scale*431,oy+scale*245); renderer.triangle(ox+scale*284,oy+scale*137,ox+scale*320,oy+scale*100,ox+scale*359,oy+scale*136); renderer.triangle(ox+scale*211,oy+scale*242,ox+scale*187,oy+scale*197,ox+scale*233,oy+scale*171); renderer.triangle(ox+scale*288,oy+scale*344,ox+scale*238,oy+scale*353,ox+scale*227,oy+scale*301); renderer.triangle(ox+scale*409,oy+scale*303,ox+scale*402,oy+scale*353,ox+scale*350,oy+scale*347);
        }
        else if (index==3)
        {
            //daisy 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*184,ox+scale*412,oy+scale*87,ox+scale*368,oy+scale*213); renderer.triangle(ox+scale*272,oy+scale*268,ox+scale*141,oy+scale*236,ox+scale*272,oy+scale*212); renderer.triangle(ox+scale*368,oy+scale*268,ox+scale*406,oy+scale*396,ox+scale*320,oy+scale*296); renderer.triangle(ox+scale*368,oy+scale*213,ox+scale*498,oy+scale*234,ox+scale*368,oy+scale*267); renderer.triangle(ox+scale*272,oy+scale*212,ox+scale*226,oy+scale*89,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*296,ox+scale*236,oy+scale*397,ox+scale*272,oy+scale*268); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*350,oy+scale*200,ox+scale*320,oy+scale*192,ox+scale*320,oy+scale*60); renderer.triangle(ox+scale*270,oy+scale*234,ox+scale*278,oy+scale*264,ox+scale*164,oy+scale*330); renderer.triangle(ox+scale*340,oy+scale*287,ox+scale*362,oy+scale*264,ox+scale*476,oy+scale*330); renderer.triangle(ox+scale*350,oy+scale*200,ox+scale*473,oy+scale*147,ox+scale*368,oy+scale*246); renderer.triangle(ox+scale*270,oy+scale*234,ox+scale*163,oy+scale*154,ox+scale*301,oy+scale*196); renderer.triangle(ox+scale*340,oy+scale*287,ox+scale*324,oy+scale*419,ox+scale*291,oy+scale*279); renderer.triangle(ox+scale*361,oy+scale*262,ox+scale*472,oy+scale*327,ox+scale*368,oy+scale*234); renderer.triangle(ox+scale*318,oy+scale*193,ox+scale*320,oy+scale*64,ox+scale*291,oy+scale*201); renderer.triangle(ox+scale*280,oy+scale*265,ox+scale*168,oy+scale*328,ox+scale*301,oy+scale*284); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*184,ox+scale*368,oy+scale*213); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*368,oy+scale*213,ox+scale*368,oy+scale*267); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*272,oy+scale*268,ox+scale*272,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*272,oy+scale*212,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*368,oy+scale*268,ox+scale*320,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*296,ox+scale*272,oy+scale*268);
        }
        else if (index==4)
        {
            //daisy 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*184,ox+scale*391,oy+scale*76,ox+scale*360,oy+scale*201); renderer.triangle(ox+scale*264,oy+scale*240,ox+scale*156,oy+scale*169,ox+scale*281,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*296,ox+scale*249,oy+scale*404,ox+scale*280,oy+scale*279); renderer.triangle(ox+scale*376,oy+scale*240,ox+scale*484,oy+scale*311,ox+scale*359,oy+scale*280); renderer.triangle(ox+scale*360,oy+scale*201,ox+scale*483,oy+scale*168,ox+scale*376,oy+scale*240); renderer.triangle(ox+scale*281,oy+scale*200,ox+scale*248,oy+scale*77,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*280,oy+scale*279,ox+scale*157,oy+scale*312,ox+scale*264,oy+scale*240); renderer.triangle(ox+scale*359,oy+scale*280,ox+scale*392,oy+scale*403,ox+scale*320,oy+scale*296); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*343,oy+scale*195,ox+scale*320,oy+scale*192,ox+scale*320,oy+scale*60); renderer.triangle(ox+scale*275,oy+scale*217,ox+scale*272,oy+scale*240,ox+scale*140,oy+scale*240); renderer.triangle(ox+scale*297,oy+scale*285,ox+scale*320,oy+scale*288,ox+scale*320,oy+scale*420); renderer.triangle(ox+scale*365,oy+scale*263,ox+scale*368,oy+scale*240,ox+scale*500,oy+scale*240); renderer.triangle(ox+scale*343,oy+scale*195,ox+scale*445,oy+scale*111,ox+scale*366,oy+scale*226); renderer.triangle(ox+scale*275,oy+scale*217,ox+scale*191,oy+scale*115,ox+scale*306,oy+scale*194); renderer.triangle(ox+scale*297,oy+scale*285,ox+scale*195,oy+scale*369,ox+scale*274,oy+scale*254); renderer.triangle(ox+scale*365,oy+scale*263,ox+scale*449,oy+scale*365,ox+scale*334,oy+scale*286); renderer.triangle(ox+scale*367,oy+scale*239,ox+scale*496,oy+scale*240,ox+scale*363,oy+scale*218); renderer.triangle(ox+scale*319,oy+scale*193,ox+scale*320,oy+scale*64,ox+scale*298,oy+scale*197); renderer.triangle(ox+scale*273,oy+scale*241,ox+scale*144,oy+scale*240,ox+scale*277,oy+scale*262); renderer.triangle(ox+scale*321,oy+scale*287,ox+scale*320,oy+scale*416,ox+scale*342,oy+scale*283); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*184,ox+scale*360,oy+scale*201); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*201,ox+scale*376,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*240,ox+scale*281,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*281,oy+scale*200,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*296,ox+scale*280,oy+scale*279); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*279,ox+scale*264,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*240,ox+scale*359,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*359,oy+scale*280,ox+scale*320,oy+scale*296);

        }

        else if (index==5)
        {
            //daisy 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*184,ox+scale*377,oy+scale*71,ox+scale*353,oy+scale*195); renderer.triangle(ox+scale*267,oy+scale*223,ox+scale*177,oy+scale*133,ox+scale*288,oy+scale*195); renderer.triangle(ox+scale*287,oy+scale*285,ox+scale*174,oy+scale*343,ox+scale*267,oy+scale*257); renderer.triangle(ox+scale*353,oy+scale*285,ox+scale*373,oy+scale*411,ox+scale*320,oy+scale*296); renderer.triangle(ox+scale*373,oy+scale*223,ox+scale*499,oy+scale*242,ox+scale*373,oy+scale*257); renderer.triangle(ox+scale*353,oy+scale*195,ox+scale*462,oy+scale*133,ox+scale*373,oy+scale*223); renderer.triangle(ox+scale*288,oy+scale*195,ox+scale*262,oy+scale*72,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*267,oy+scale*257,ox+scale*142,oy+scale*243,ox+scale*267,oy+scale*223); renderer.triangle(ox+scale*320,oy+scale*296,ox+scale*268,oy+scale*411,ox+scale*288,oy+scale*285); renderer.triangle(ox+scale*373,oy+scale*257,ox+scale*466,oy+scale*342,ox+scale*353,oy+scale*285); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*339,oy+scale*193,ox+scale*320,oy+scale*192,ox+scale*320,oy+scale*60); renderer.triangle(ox+scale*281,oy+scale*207,ox+scale*274,oy+scale*225,ox+scale*149,oy+scale*184); renderer.triangle(ox+scale*277,oy+scale*267,ox+scale*292,oy+scale*279,ox+scale*214,oy+scale*386); renderer.triangle(ox+scale*332,oy+scale*289,ox+scale*348,oy+scale*279,ox+scale*426,oy+scale*386); renderer.triangle(ox+scale*370,oy+scale*244,ox+scale*366,oy+scale*225,ox+scale*491,oy+scale*184); renderer.triangle(ox+scale*339,oy+scale*193,ox+scale*424,oy+scale*94,ox+scale*361,oy+scale*215); renderer.triangle(ox+scale*281,oy+scale*207,ox+scale*213,oy+scale*96,ox+scale*308,oy+scale*193); renderer.triangle(ox+scale*277,oy+scale*267,ox+scale*150,oy+scale*297,ox+scale*272,oy+scale*237); renderer.triangle(ox+scale*332,oy+scale*289,ox+scale*322,oy+scale*419,ox+scale*302,oy+scale*285); renderer.triangle(ox+scale*370,oy+scale*244,ox+scale*491,oy+scale*293,ox+scale*357,oy+scale*271); renderer.triangle(ox+scale*364,oy+scale*225,ox+scale*487,oy+scale*185,ox+scale*357,oy+scale*209); renderer.triangle(ox+scale*319,oy+scale*193,ox+scale*320,oy+scale*64,ox+scale*302,oy+scale*195); renderer.triangle(ox+scale*275,oy+scale*226,ox+scale*153,oy+scale*186,ox+scale*272,oy+scale*243); renderer.triangle(ox+scale*293,oy+scale*278,ox+scale*217,oy+scale*382,ox+scale*308,oy+scale*287); renderer.triangle(ox+scale*348,oy+scale*277,ox+scale*423,oy+scale*382,ox+scale*361,oy+scale*265); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*184,ox+scale*353,oy+scale*195); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*353,oy+scale*195,ox+scale*373,oy+scale*223); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*267,oy+scale*223,ox+scale*288,oy+scale*195); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*288,oy+scale*195,ox+scale*320,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*287,oy+scale*285,ox+scale*267,oy+scale*257); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*267,oy+scale*257,ox+scale*267,oy+scale*223); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*353,oy+scale*285,ox+scale*320,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*296,ox+scale*288,oy+scale*285); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*373,oy+scale*223,ox+scale*373,oy+scale*257); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*373,oy+scale*257,ox+scale*353,oy+scale*285);

        }

        else if (index==6)
        {
            //moonflower 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*152,ox+scale*426,oy+scale*94); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*426,oy+scale*94,ox+scale*404,oy+scale*213); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*236,oy+scale*213,ox+scale*214,oy+scale*94); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*214,oy+scale*94,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*311,ox+scale*148,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*148,oy+scale*296,ox+scale*236,oy+scale*213); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*311,ox+scale*320,oy+scale*421); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*421,ox+scale*268,oy+scale*311); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*404,oy+scale*213,ox+scale*492,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*492,oy+scale*296,ox+scale*372,oy+scale*311); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*339,oy+scale*143,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*234,oy+scale*192,ox+scale*236,oy+scale*213); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*247,oy+scale*307,ox+scale*268,oy+scale*311); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*361,oy+scale*330,ox+scale*372,oy+scale*311); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*418,oy+scale*228,ox+scale*404,oy+scale*213); renderer.triangle(ox+scale*406,oy+scale*192,ox+scale*404,oy+scale*213,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*301,oy+scale*143,ox+scale*320,oy+scale*152,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*222,oy+scale*228,ox+scale*236,oy+scale*213,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*279,oy+scale*330,ox+scale*268,oy+scale*311,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*393,oy+scale*307,ox+scale*372,oy+scale*311,ox+scale*320,oy+scale*240); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*426,oy+scale*94,ox+scale*390,oy+scale*144,ox+scale*382,oy+scale*120); renderer.triangle(ox+scale*214,oy+scale*94,ox+scale*250,oy+scale*144,ox+scale*225,oy+scale*144); renderer.triangle(ox+scale*148,oy+scale*296,ox+scale*207,oy+scale*277,ox+scale*199,oy+scale*301); renderer.triangle(ox+scale*320,oy+scale*421,ox+scale*320,oy+scale*359,ox+scale*340,oy+scale*374); renderer.triangle(ox+scale*492,oy+scale*296,ox+scale*433,oy+scale*277,ox+scale*454,oy+scale*262); renderer.triangle(ox+scale*390,oy+scale*144,ox+scale*426,oy+scale*94,ox+scale*415,oy+scale*144); renderer.triangle(ox+scale*250,oy+scale*144,ox+scale*214,oy+scale*94,ox+scale*258,oy+scale*120); renderer.triangle(ox+scale*207,oy+scale*277,ox+scale*148,oy+scale*296,ox+scale*186,oy+scale*262); renderer.triangle(ox+scale*320,oy+scale*359,ox+scale*320,oy+scale*421,ox+scale*300,oy+scale*374); renderer.triangle(ox+scale*433,oy+scale*277,ox+scale*492,oy+scale*296,ox+scale*441,oy+scale*301);

        }
        else if (index==7)
        {
            //moonflower 6 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*152,ox+scale*411,oy+scale*83); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*411,oy+scale*83,ox+scale*396,oy+scale*196); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*244,oy+scale*196,ox+scale*229,oy+scale*83); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*229,oy+scale*83,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*244,oy+scale*284,ox+scale*139,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*139,oy+scale*240,ox+scale*244,oy+scale*196); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*328,ox+scale*229,oy+scale*397); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*229,oy+scale*397,ox+scale*244,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*396,oy+scale*284,ox+scale*411,oy+scale*397); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*411,oy+scale*397,ox+scale*320,oy+scale*328); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*396,oy+scale*196,ox+scale*501,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*501,oy+scale*240,ox+scale*396,oy+scale*284); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*336,oy+scale*142,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*243,oy+scale*177,ox+scale*244,oy+scale*196); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*227,oy+scale*275,ox+scale*244,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*304,oy+scale*338,ox+scale*320,oy+scale*328); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*397,oy+scale*303,ox+scale*396,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*413,oy+scale*205,ox+scale*396,oy+scale*196); renderer.triangle(ox+scale*397,oy+scale*177,ox+scale*396,oy+scale*196,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*304,oy+scale*142,ox+scale*320,oy+scale*152,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*227,oy+scale*205,ox+scale*244,oy+scale*196,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*243,oy+scale*303,ox+scale*244,oy+scale*284,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*336,oy+scale*338,ox+scale*320,oy+scale*328,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*413,oy+scale*275,ox+scale*396,oy+scale*284,ox+scale*320,oy+scale*240); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*411,oy+scale*83,ox+scale*379,oy+scale*137,ox+scale*372,oy+scale*115); renderer.triangle(ox+scale*229,oy+scale*83,ox+scale*261,oy+scale*137,ox+scale*238,oy+scale*132); renderer.triangle(ox+scale*139,oy+scale*240,ox+scale*201,oy+scale*240,ox+scale*186,oy+scale*257); renderer.triangle(ox+scale*229,oy+scale*397,ox+scale*261,oy+scale*343,ox+scale*268,oy+scale*365); renderer.triangle(ox+scale*411,oy+scale*397,ox+scale*379,oy+scale*343,ox+scale*402,oy+scale*348); renderer.triangle(ox+scale*501,oy+scale*240,ox+scale*439,oy+scale*240,ox+scale*454,oy+scale*223); renderer.triangle(ox+scale*379,oy+scale*137,ox+scale*411,oy+scale*83,ox+scale*402,oy+scale*132); renderer.triangle(ox+scale*261,oy+scale*137,ox+scale*229,oy+scale*83,ox+scale*268,oy+scale*115); renderer.triangle(ox+scale*201,oy+scale*240,ox+scale*139,oy+scale*240,ox+scale*186,oy+scale*223); renderer.triangle(ox+scale*261,oy+scale*343,ox+scale*229,oy+scale*397,ox+scale*238,oy+scale*348); renderer.triangle(ox+scale*379,oy+scale*343,ox+scale*411,oy+scale*397,ox+scale*372,oy+scale*365); renderer.triangle(ox+scale*439,oy+scale*240,ox+scale*501,oy+scale*240,ox+scale*454,oy+scale*257);
        }
        else if (index==8)
        {
            //moonflower 7 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*152,ox+scale*399,oy+scale*77); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*399,oy+scale*77,ox+scale*389,oy+scale*185); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*251,oy+scale*185,ox+scale*241,oy+scale*77); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*241,oy+scale*77,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*234,oy+scale*260,ox+scale*144,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*200,ox+scale*251,oy+scale*185); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*282,oy+scale*319,ox+scale*178,oy+scale*353); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*178,oy+scale*353,ox+scale*234,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*358,oy+scale*319,ox+scale*320,oy+scale*421); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*421,ox+scale*282,oy+scale*319); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*406,oy+scale*260,ox+scale*462,oy+scale*353); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*462,oy+scale*353,ox+scale*358,oy+scale*319); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*389,oy+scale*185,ox+scale*496,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*496,oy+scale*200,ox+scale*406,oy+scale*260); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*334,oy+scale*142,ox+scale*320,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*252,oy+scale*168,ox+scale*251,oy+scale*185); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*221,oy+scale*248,ox+scale*234,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*265,oy+scale*322,ox+scale*282,oy+scale*319); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*350,oy+scale*334,ox+scale*358,oy+scale*319); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*275,ox+scale*406,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*405,oy+scale*190,ox+scale*389,oy+scale*185); renderer.triangle(ox+scale*388,oy+scale*168,ox+scale*389,oy+scale*185,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*306,oy+scale*142,ox+scale*320,oy+scale*152,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*235,oy+scale*190,ox+scale*251,oy+scale*185,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*228,oy+scale*275,ox+scale*234,oy+scale*260,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*290,oy+scale*334,ox+scale*282,oy+scale*319,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*375,oy+scale*322,ox+scale*358,oy+scale*319,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*419,oy+scale*248,ox+scale*406,oy+scale*260,ox+scale*320,oy+scale*240); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*399,oy+scale*77,ox+scale*372,oy+scale*133,ox+scale*365,oy+scale*112); renderer.triangle(ox+scale*241,oy+scale*77,ox+scale*268,oy+scale*133,ox+scale*248,oy+scale*125); renderer.triangle(ox+scale*144,oy+scale*200,ox+scale*204,oy+scale*214,ox+scale*186,oy+scale*224); renderer.triangle(ox+scale*178,oy+scale*353,ox+scale*227,oy+scale*314,ox+scale*224,oy+scale*335); renderer.triangle(ox+scale*320,oy+scale*421,ox+scale*320,oy+scale*359,ox+scale*335,oy+scale*375); renderer.triangle(ox+scale*462,oy+scale*353,ox+scale*413,oy+scale*314,ox+scale*434,oy+scale*312); renderer.triangle(ox+scale*496,oy+scale*200,ox+scale*436,oy+scale*214,ox+scale*448,oy+scale*196); renderer.triangle(ox+scale*372,oy+scale*133,ox+scale*399,oy+scale*77,ox+scale*392,oy+scale*125); renderer.triangle(ox+scale*268,oy+scale*133,ox+scale*241,oy+scale*77,ox+scale*275,oy+scale*112); renderer.triangle(ox+scale*204,oy+scale*214,ox+scale*144,oy+scale*200,ox+scale*192,oy+scale*196); renderer.triangle(ox+scale*227,oy+scale*314,ox+scale*178,oy+scale*353,ox+scale*206,oy+scale*312); renderer.triangle(ox+scale*320,oy+scale*359,ox+scale*320,oy+scale*421,ox+scale*305,oy+scale*375); renderer.triangle(ox+scale*413,oy+scale*314,ox+scale*462,oy+scale*353,ox+scale*416,oy+scale*335); renderer.triangle(ox+scale*436,oy+scale*214,ox+scale*496,oy+scale*200,ox+scale*454,oy+scale*224);
        }
        else if (index==9)
        {
            //vinca 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*334,oy+scale*229,ox+scale*336,oy+scale*61,ox+scale*472,oy+scale*153); renderer.triangle(ox+scale*334,oy+scale*229,ox+scale*472,oy+scale*153,ox+scale*482,oy+scale*317); renderer.triangle(ox+scale*304,oy+scale*233,ox+scale*157,oy+scale*316,ox+scale*168,oy+scale*152); renderer.triangle(ox+scale*304,oy+scale*233,ox+scale*168,oy+scale*152,ox+scale*306,oy+scale*61); renderer.triangle(ox+scale*322,oy+scale*258,ox+scale*467,oy+scale*344,ox+scale*320,oy+scale*416); renderer.triangle(ox+scale*322,oy+scale*258,ox+scale*320,oy+scale*416,ox+scale*172,oy+scale*342); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*355,oy+scale*221,ox+scale*370,oy+scale*184,ox+scale*426,oy+scale*178); renderer.triangle(ox+scale*355,oy+scale*221,ox+scale*426,oy+scale*178,ox+scale*395,oy+scale*225); renderer.triangle(ox+scale*286,oy+scale*219,ox+scale*246,oy+scale*224,ox+scale*213,oy+scale*179); renderer.triangle(ox+scale*286,oy+scale*219,ox+scale*213,oy+scale*179,ox+scale*269,oy+scale*183); renderer.triangle(ox+scale*319,oy+scale*280,ox+scale*343,oy+scale*311,ox+scale*321,oy+scale*363); renderer.triangle(ox+scale*319,oy+scale*280,ox+scale*321,oy+scale*363,ox+scale*296,oy+scale*312); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*373,oy+scale*211); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*373,oy+scale*211,ox+scale*369,oy+scale*272); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*270,ox+scale*269,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*269,oy+scale*209,ox+scale*323,oy+scale*182); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*270,ox+scale*318,oy+scale*300); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*318,oy+scale*300,ox+scale*268,oy+scale*266);

        }
        else if (index==10)
        {
            //vinca 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*329,oy+scale*225,ox+scale*330,oy+scale*60,ox+scale*423,oy+scale*98); renderer.triangle(ox+scale*329,oy+scale*225,ox+scale*423,oy+scale*98,ox+scale*488,oy+scale*176); renderer.triangle(ox+scale*308,oy+scale*226,ox+scale*152,oy+scale*175,ox+scale*217,oy+scale*98); renderer.triangle(ox+scale*308,oy+scale*226,ox+scale*217,oy+scale*98,ox+scale*311,oy+scale*60); renderer.triangle(ox+scale*303,oy+scale*247,ox+scale*206,oy+scale*380,ox+scale*153,oy+scale*294); renderer.triangle(ox+scale*303,oy+scale*247,ox+scale*153,oy+scale*294,ox+scale*147,oy+scale*193); renderer.triangle(ox+scale*321,oy+scale*258,ox+scale*418,oy+scale*391,ox+scale*320,oy+scale*416); renderer.triangle(ox+scale*321,oy+scale*258,ox+scale*320,oy+scale*416,ox+scale*221,oy+scale*390); renderer.triangle(ox+scale*337,oy+scale*244,ox+scale*494,oy+scale*194,ox+scale*487,oy+scale*295); renderer.triangle(ox+scale*337,oy+scale*244,ox+scale*487,oy+scale*295,ox+scale*432,oy+scale*380); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*344,oy+scale*208,ox+scale*352,oy+scale*172,ox+scale*392,oy+scale*140); renderer.triangle(ox+scale*344,oy+scale*208,ox+scale*392,oy+scale*140,ox+scale*376,oy+scale*188); renderer.triangle(ox+scale*297,oy+scale*207,ox+scale*265,oy+scale*189,ox+scale*247,oy+scale*141); renderer.triangle(ox+scale*297,oy+scale*207,ox+scale*247,oy+scale*141,ox+scale*288,oy+scale*171); renderer.triangle(ox+scale*282,oy+scale*252,ox+scale*254,oy+scale*276,ox+scale*203,oy+scale*279); renderer.triangle(ox+scale*282,oy+scale*252,ox+scale*203,oy+scale*279,ox+scale*244,oy+scale*249); renderer.triangle(ox+scale*319,oy+scale*280,ox+scale*334,oy+scale*314,ox+scale*321,oy+scale*363); renderer.triangle(ox+scale*319,oy+scale*280,ox+scale*321,oy+scale*363,ox+scale*305,oy+scale*315); renderer.triangle(ox+scale*358,oy+scale*253,ox+scale*395,oy+scale*249,ox+scale*437,oy+scale*278); renderer.triangle(ox+scale*358,oy+scale*253,ox+scale*437,oy+scale*278,ox+scale*387,oy+scale*277); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*356,oy+scale*192); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*356,oy+scale*192,ox+scale*376,oy+scale*224); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*263,oy+scale*221,ox+scale*285,oy+scale*191); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*285,oy+scale*191,ox+scale*322,oy+scale*182); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*285,oy+scale*289,ox+scale*263,oy+scale*258); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*263,oy+scale*258,ox+scale*265,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*355,oy+scale*289,ox+scale*319,oy+scale*300); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*319,oy+scale*300,ox+scale*284,oy+scale*286); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*377,oy+scale*221,ox+scale*377,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*377,oy+scale*259,ox+scale*353,oy+scale*288);

        }
        else if (index==11)
        {
            //vinca 6 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*328,oy+scale*224,ox+scale*328,oy+scale*60,ox+scale*408,oy+scale*88); renderer.triangle(ox+scale*328,oy+scale*224,ox+scale*408,oy+scale*88,ox+scale*472,oy+scale*144); renderer.triangle(ox+scale*310,oy+scale*225,ox+scale*168,oy+scale*143,ox+scale*232,oy+scale*88); renderer.triangle(ox+scale*310,oy+scale*225,ox+scale*232,oy+scale*88,ox+scale*313,oy+scale*60); renderer.triangle(ox+scale*302,oy+scale*241,ox+scale*160,oy+scale*323,ox+scale*144,oy+scale*240); renderer.triangle(ox+scale*302,oy+scale*241,ox+scale*144,oy+scale*240,ox+scale*161,oy+scale*156); renderer.triangle(ox+scale*312,oy+scale*256,ox+scale*312,oy+scale*420,ox+scale*232,oy+scale*392); renderer.triangle(ox+scale*312,oy+scale*256,ox+scale*232,oy+scale*392,ox+scale*168,oy+scale*336); renderer.triangle(ox+scale*330,oy+scale*255,ox+scale*472,oy+scale*337,ox+scale*408,oy+scale*392); renderer.triangle(ox+scale*330,oy+scale*255,ox+scale*408,oy+scale*392,ox+scale*327,oy+scale*420); renderer.triangle(ox+scale*338,oy+scale*239,ox+scale*480,oy+scale*157,ox+scale*496,oy+scale*240); renderer.triangle(ox+scale*338,oy+scale*239,ox+scale*496,oy+scale*240,ox+scale*479,oy+scale*324); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*340,oy+scale*206,ox+scale*347,oy+scale*170,ox+scale*381,oy+scale*133); renderer.triangle(ox+scale*340,oy+scale*206,ox+scale*381,oy+scale*133,ox+scale*368,oy+scale*181); renderer.triangle(ox+scale*300,oy+scale*205,ox+scale*273,oy+scale*182,ox+scale*258,oy+scale*134); renderer.triangle(ox+scale*300,oy+scale*205,ox+scale*258,oy+scale*134,ox+scale*293,oy+scale*169); renderer.triangle(ox+scale*280,oy+scale*239,ox+scale*246,oy+scale*252,ox+scale*197,oy+scale*240); renderer.triangle(ox+scale*280,oy+scale*239,ox+scale*197,oy+scale*240,ox+scale*245,oy+scale*228); renderer.triangle(ox+scale*300,oy+scale*274,ox+scale*293,oy+scale*310,ox+scale*259,oy+scale*347); renderer.triangle(ox+scale*300,oy+scale*274,ox+scale*259,oy+scale*347,ox+scale*272,oy+scale*299); renderer.triangle(ox+scale*340,oy+scale*275,ox+scale*367,oy+scale*298,ox+scale*382,oy+scale*346); renderer.triangle(ox+scale*340,oy+scale*275,ox+scale*382,oy+scale*346,ox+scale*347,oy+scale*311); renderer.triangle(ox+scale*360,oy+scale*241,ox+scale*394,oy+scale*228,ox+scale*443,oy+scale*240); renderer.triangle(ox+scale*360,oy+scale*241,ox+scale*443,oy+scale*240,ox+scale*395,oy+scale*252); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*351,oy+scale*188); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*351,oy+scale*188,ox+scale*371,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*210,ox+scale*291,oy+scale*188); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*291,oy+scale*188,ox+scale*322,oy+scale*182); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*270,ox+scale*260,oy+scale*239); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*260,oy+scale*239,ox+scale*270,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*300,ox+scale*289,oy+scale*292); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*289,oy+scale*292,ox+scale*269,oy+scale*268); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*270,ox+scale*349,oy+scale*292); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*349,oy+scale*292,ox+scale*318,oy+scale*298); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*210,ox+scale*380,oy+scale*241); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*380,oy+scale*241,ox+scale*370,oy+scale*271);

        }
        else if (index==12)
        {
            //dogwood 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*472,oy+scale*152,ox+scale*367,oy+scale*157,ox+scale*346,oy+scale*170); renderer.triangle(ox+scale*472,oy+scale*152,ox+scale*346,oy+scale*170,ox+scale*341,oy+scale*190); renderer.triangle(ox+scale*472,oy+scale*152,ox+scale*341,oy+scale*190,ox+scale*374,oy+scale*247); renderer.triangle(ox+scale*472,oy+scale*152,ox+scale*374,oy+scale*247,ox+scale*394,oy+scale*252); renderer.triangle(ox+scale*472,oy+scale*152,ox+scale*394,oy+scale*252,ox+scale*415,oy+scale*241); renderer.triangle(ox+scale*168,oy+scale*152,ox+scale*225,oy+scale*241,ox+scale*246,oy+scale*252); renderer.triangle(ox+scale*168,oy+scale*152,ox+scale*246,oy+scale*252,ox+scale*266,oy+scale*247); renderer.triangle(ox+scale*168,oy+scale*152,ox+scale*266,oy+scale*247,ox+scale*299,oy+scale*190); renderer.triangle(ox+scale*168,oy+scale*152,ox+scale*299,oy+scale*190,ox+scale*294,oy+scale*170); renderer.triangle(ox+scale*168,oy+scale*152,ox+scale*294,oy+scale*170,ox+scale*273,oy+scale*157); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*368,oy+scale*322,ox+scale*367,oy+scale*298); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*367,oy+scale*298,ox+scale*353,oy+scale*283); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*353,oy+scale*283,ox+scale*287,oy+scale*283); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*287,oy+scale*283,ox+scale*273,oy+scale*298); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*273,oy+scale*298,ox+scale*272,oy+scale*322); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*403,oy+scale*192,ox+scale*361,oy+scale*182,ox+scale*393,oy+scale*198); renderer.triangle(ox+scale*403,oy+scale*192,ox+scale*393,oy+scale*198,ox+scale*391,oy+scale*233); renderer.triangle(ox+scale*237,oy+scale*192,ox+scale*249,oy+scale*233,ox+scale*247,oy+scale*198); renderer.triangle(ox+scale*237,oy+scale*192,ox+scale*247,oy+scale*198,ox+scale*279,oy+scale*182); renderer.triangle(ox+scale*320,oy+scale*336,ox+scale*350,oy+scale*305,ox+scale*320,oy+scale*325); renderer.triangle(ox+scale*320,oy+scale*336,ox+scale*320,oy+scale*325,ox+scale*290,oy+scale*305); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*374,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*374,oy+scale*209,ox+scale*372,oy+scale*270); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*270,ox+scale*266,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*266,oy+scale*209,ox+scale*320,oy+scale*180); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*270,ox+scale*320,oy+scale*302); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*302,ox+scale*268,oy+scale*270);
        }
        else if (index==13)
        {
            //dogwood 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*444,oy+scale*116,ox+scale*356,oy+scale*152,ox+scale*340,oy+scale*168); renderer.triangle(ox+scale*444,oy+scale*116,ox+scale*340,oy+scale*168,ox+scale*336,oy+scale*188); renderer.triangle(ox+scale*444,oy+scale*116,ox+scale*336,oy+scale*188,ox+scale*372,oy+scale*224); renderer.triangle(ox+scale*444,oy+scale*116,ox+scale*372,oy+scale*224,ox+scale*392,oy+scale*220); renderer.triangle(ox+scale*444,oy+scale*116,ox+scale*392,oy+scale*220,ox+scale*408,oy+scale*204); renderer.triangle(ox+scale*196,oy+scale*116,ox+scale*232,oy+scale*204,ox+scale*248,oy+scale*220); renderer.triangle(ox+scale*196,oy+scale*116,ox+scale*248,oy+scale*220,ox+scale*268,oy+scale*224); renderer.triangle(ox+scale*196,oy+scale*116,ox+scale*268,oy+scale*224,ox+scale*304,oy+scale*188); renderer.triangle(ox+scale*196,oy+scale*116,ox+scale*304,oy+scale*188,ox+scale*300,oy+scale*168); renderer.triangle(ox+scale*196,oy+scale*116,ox+scale*300,oy+scale*168,ox+scale*284,oy+scale*152); renderer.triangle(ox+scale*196,oy+scale*364,ox+scale*284,oy+scale*328,ox+scale*300,oy+scale*312); renderer.triangle(ox+scale*196,oy+scale*364,ox+scale*300,oy+scale*312,ox+scale*304,oy+scale*292); renderer.triangle(ox+scale*196,oy+scale*364,ox+scale*304,oy+scale*292,ox+scale*268,oy+scale*256); renderer.triangle(ox+scale*196,oy+scale*364,ox+scale*268,oy+scale*256,ox+scale*248,oy+scale*260); renderer.triangle(ox+scale*196,oy+scale*364,ox+scale*248,oy+scale*260,ox+scale*232,oy+scale*276); renderer.triangle(ox+scale*444,oy+scale*364,ox+scale*408,oy+scale*276,ox+scale*392,oy+scale*260); renderer.triangle(ox+scale*444,oy+scale*364,ox+scale*392,oy+scale*260,ox+scale*372,oy+scale*256); renderer.triangle(ox+scale*444,oy+scale*364,ox+scale*372,oy+scale*256,ox+scale*336,oy+scale*292); renderer.triangle(ox+scale*444,oy+scale*364,ox+scale*336,oy+scale*292,ox+scale*340,oy+scale*312); renderer.triangle(ox+scale*444,oy+scale*364,ox+scale*340,oy+scale*312,ox+scale*356,oy+scale*328); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*388,oy+scale*172,ox+scale*352,oy+scale*176,ox+scale*380,oy+scale*180); renderer.triangle(ox+scale*388,oy+scale*172,ox+scale*380,oy+scale*180,ox+scale*384,oy+scale*208); renderer.triangle(ox+scale*252,oy+scale*172,ox+scale*256,oy+scale*208,ox+scale*260,oy+scale*180); renderer.triangle(ox+scale*252,oy+scale*172,ox+scale*260,oy+scale*180,ox+scale*288,oy+scale*176); renderer.triangle(ox+scale*252,oy+scale*308,ox+scale*288,oy+scale*304,ox+scale*260,oy+scale*300); renderer.triangle(ox+scale*252,oy+scale*308,ox+scale*260,oy+scale*300,ox+scale*256,oy+scale*272); renderer.triangle(ox+scale*388,oy+scale*308,ox+scale*384,oy+scale*272,ox+scale*380,oy+scale*300); renderer.triangle(ox+scale*388,oy+scale*308,ox+scale*380,oy+scale*300,ox+scale*352,oy+scale*304); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*364,oy+scale*196); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*364,oy+scale*196,ox+scale*380,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*260,oy+scale*240,ox+scale*276,oy+scale*196); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*276,oy+scale*196,ox+scale*320,oy+scale*180); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*300,ox+scale*276,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*276,oy+scale*284,ox+scale*260,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*380,oy+scale*240,ox+scale*364,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*364,oy+scale*284,ox+scale*320,oy+scale*300);

        }
        else if (index==14)
        {
            //dogwood 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*423,oy+scale*98,ox+scale*349,oy+scale*149,ox+scale*336,oy+scale*167); renderer.triangle(ox+scale*423,oy+scale*98,ox+scale*336,oy+scale*167,ox+scale*333,oy+scale*187); renderer.triangle(ox+scale*423,oy+scale*98,ox+scale*333,oy+scale*187,ox+scale*366,oy+scale*211); renderer.triangle(ox+scale*423,oy+scale*98,ox+scale*366,oy+scale*211,ox+scale*384,oy+scale*202); renderer.triangle(ox+scale*423,oy+scale*98,ox+scale*384,oy+scale*202,ox+scale*397,oy+scale*184); renderer.triangle(ox+scale*217,oy+scale*98,ox+scale*243,oy+scale*184,ox+scale*256,oy+scale*202); renderer.triangle(ox+scale*217,oy+scale*98,ox+scale*256,oy+scale*202,ox+scale*274,oy+scale*211); renderer.triangle(ox+scale*217,oy+scale*98,ox+scale*274,oy+scale*211,ox+scale*307,oy+scale*187); renderer.triangle(ox+scale*217,oy+scale*98,ox+scale*307,oy+scale*187,ox+scale*304,oy+scale*167); renderer.triangle(ox+scale*217,oy+scale*98,ox+scale*304,oy+scale*167,ox+scale*291,oy+scale*149); renderer.triangle(ox+scale*153,oy+scale*294,ox+scale*243,oy+scale*296,ox+scale*264,oy+scale*290); renderer.triangle(ox+scale*153,oy+scale*294,ox+scale*264,oy+scale*290,ox+scale*279,oy+scale*275); renderer.triangle(ox+scale*153,oy+scale*294,ox+scale*279,oy+scale*275,ox+scale*266,oy+scale*236); renderer.triangle(ox+scale*153,oy+scale*294,ox+scale*266,oy+scale*236,ox+scale*246,oy+scale*233); renderer.triangle(ox+scale*153,oy+scale*294,ox+scale*246,oy+scale*233,ox+scale*225,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*350,oy+scale*330,ox+scale*350,oy+scale*308); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*350,oy+scale*308,ox+scale*341,oy+scale*290); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*341,oy+scale*290,ox+scale*299,oy+scale*290); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*299,oy+scale*290,ox+scale*290,oy+scale*308); renderer.triangle(ox+scale*320,oy+scale*415,ox+scale*290,oy+scale*308,ox+scale*290,oy+scale*330); renderer.triangle(ox+scale*487,oy+scale*294,ox+scale*415,oy+scale*240,ox+scale*394,oy+scale*233); renderer.triangle(ox+scale*487,oy+scale*294,ox+scale*394,oy+scale*233,ox+scale*374,oy+scale*236); renderer.triangle(ox+scale*487,oy+scale*294,ox+scale*374,oy+scale*236,ox+scale*361,oy+scale*275); renderer.triangle(ox+scale*487,oy+scale*294,ox+scale*361,oy+scale*275,ox+scale*376,oy+scale*290); renderer.triangle(ox+scale*487,oy+scale*294,ox+scale*376,oy+scale*290,ox+scale*397,oy+scale*296); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*377,oy+scale*162,ox+scale*346,oy+scale*173,ox+scale*370,oy+scale*171); renderer.triangle(ox+scale*377,oy+scale*162,ox+scale*370,oy+scale*171,ox+scale*375,oy+scale*195); renderer.triangle(ox+scale*263,oy+scale*162,ox+scale*265,oy+scale*195,ox+scale*270,oy+scale*171); renderer.triangle(ox+scale*263,oy+scale*162,ox+scale*270,oy+scale*171,ox+scale*294,oy+scale*173); renderer.triangle(ox+scale*229,oy+scale*270,ox+scale*260,oy+scale*279,ox+scale*239,oy+scale*266); renderer.triangle(ox+scale*229,oy+scale*270,ox+scale*239,oy+scale*266,ox+scale*249,oy+scale*244); renderer.triangle(ox+scale*320,oy+scale*336,ox+scale*338,oy+scale*309,ox+scale*320,oy+scale*325); renderer.triangle(ox+scale*320,oy+scale*336,ox+scale*320,oy+scale*325,ox+scale*302,oy+scale*309); renderer.triangle(ox+scale*411,oy+scale*270,ox+scale*391,oy+scale*244,ox+scale*401,oy+scale*266); renderer.triangle(ox+scale*411,oy+scale*270,ox+scale*401,oy+scale*266,ox+scale*380,oy+scale*279); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*180,ox+scale*357,oy+scale*190); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*357,oy+scale*190,ox+scale*377,oy+scale*221); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*263,oy+scale*221,ox+scale*283,oy+scale*190); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*190,ox+scale*320,oy+scale*180); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*285,oy+scale*289,ox+scale*261,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*261,oy+scale*259,ox+scale*263,oy+scale*221); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*355,oy+scale*289,ox+scale*320,oy+scale*302); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*302,ox+scale*285,oy+scale*289); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*377,oy+scale*221,ox+scale*379,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*379,oy+scale*259,ox+scale*355,oy+scale*289);

        }

        else if (index==15)
        {
            //gloxinia 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*88,ox+scale*360,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*84,ox+scale*408,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*408,oy+scale*84,ox+scale*476,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*148,ox+scale*476,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*200,ox+scale*472,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*168,oy+scale*240,ox+scale*164,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*200,ox+scale*164,oy+scale*152); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*152,ox+scale*228,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*228,oy+scale*84,ox+scale*280,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*84,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*392,ox+scale*280,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*396,ox+scale*232,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*232,oy+scale*396,ox+scale*164,oy+scale*332); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*332,ox+scale*164,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*280,ox+scale*168,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*472,oy+scale*240,ox+scale*476,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*280,ox+scale*476,oy+scale*328); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*328,ox+scale*412,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*396,ox+scale*360,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*396,ox+scale*320,oy+scale*392); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*108,ox+scale*376,oy+scale*104); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*104,ox+scale*420,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*420,oy+scale*108,ox+scale*452,oy+scale*140); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*140,ox+scale*456,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*456,oy+scale*184,ox+scale*452,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*240,ox+scale*184,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*184,oy+scale*184,ox+scale*188,oy+scale*140); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*140,ox+scale*220,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*220,oy+scale*108,ox+scale*264,oy+scale*104); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*104,ox+scale*320,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*372,ox+scale*264,oy+scale*376); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*376,ox+scale*220,oy+scale*372); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*220,oy+scale*372,ox+scale*188,oy+scale*340); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*340,ox+scale*184,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*184,oy+scale*296,ox+scale*188,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*240,ox+scale*456,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*456,oy+scale*296,ox+scale*452,oy+scale*340); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*340,ox+scale*420,oy+scale*372); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*420,oy+scale*372,ox+scale*376,oy+scale*376); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*376,ox+scale*320,oy+scale*372); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*352,oy+scale*208,ox+scale*380,oy+scale*160,ox+scale*400,oy+scale*180); renderer.triangle(ox+scale*288,oy+scale*208,ox+scale*240,oy+scale*180,ox+scale*260,oy+scale*160); renderer.triangle(ox+scale*288,oy+scale*272,ox+scale*260,oy+scale*320,ox+scale*240,oy+scale*300); renderer.triangle(ox+scale*352,oy+scale*272,ox+scale*400,oy+scale*300,ox+scale*380,oy+scale*320);

        }
        else if (index==16)
        {
            //gloxinia 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*88,ox+scale*352,oy+scale*82); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*352,oy+scale*82,ox+scale*392,oy+scale*76); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*392,oy+scale*76,ox+scale*454,oy+scale*118); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*454,oy+scale*118,ox+scale*460,oy+scale*161); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*460,oy+scale*161,ox+scale*465,oy+scale*193); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*175,oy+scale*193,ox+scale*180,oy+scale*161); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*180,oy+scale*161,ox+scale*186,oy+scale*121); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*186,oy+scale*121,ox+scale*245,oy+scale*75); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*245,oy+scale*75,ox+scale*288,oy+scale*82); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*288,oy+scale*82,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*231,oy+scale*363,ox+scale*201,oy+scale*349); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*201,oy+scale*349,ox+scale*166,oy+scale*331); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*166,oy+scale*331,ox+scale*140,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*140,oy+scale*260,ox+scale*160,oy+scale*222); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*160,oy+scale*222,ox+scale*175,oy+scale*193); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*409,oy+scale*363,ox+scale*387,oy+scale*387); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*387,oy+scale*387,ox+scale*359,oy+scale*415); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*359,oy+scale*415,ox+scale*284,oy+scale*417); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*284,oy+scale*417,ox+scale*253,oy+scale*387); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*253,oy+scale*387,ox+scale*231,oy+scale*363); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*465,oy+scale*193,ox+scale*480,oy+scale*222); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*480,oy+scale*222,ox+scale*498,oy+scale*257); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*498,oy+scale*257,ox+scale*478,oy+scale*329); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*478,oy+scale*329,ox+scale*439,oy+scale*349); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*439,oy+scale*349,ox+scale*409,oy+scale*363); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*108,ox+scale*365,oy+scale*100); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*365,oy+scale*100,ox+scale*402,oy+scale*96); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*402,oy+scale*96,ox+scale*431,oy+scale*117); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*431,oy+scale*117,ox+scale*439,oy+scale*154); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*439,oy+scale*154,ox+scale*446,oy+scale*199); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*194,oy+scale*199,ox+scale*201,oy+scale*154); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*201,oy+scale*154,ox+scale*209,oy+scale*117); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*209,oy+scale*117,ox+scale*238,oy+scale*96); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*238,oy+scale*96,ox+scale*275,oy+scale*100); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*275,oy+scale*100,ox+scale*320,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*242,oy+scale*347,ox+scale*201,oy+scale*327); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*201,oy+scale*327,ox+scale*169,oy+scale*308); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*169,oy+scale*308,ox+scale*158,oy+scale*274); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*158,oy+scale*274,ox+scale*173,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*173,oy+scale*240,ox+scale*194,oy+scale*199); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*398,oy+scale*347,ox+scale*366,oy+scale*380); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*366,oy+scale*380,ox+scale*338,oy+scale*405); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*338,oy+scale*405,ox+scale*302,oy+scale*405); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*302,oy+scale*405,ox+scale*274,oy+scale*380); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*274,oy+scale*380,ox+scale*242,oy+scale*347); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*446,oy+scale*199,ox+scale*467,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*467,oy+scale*240,ox+scale*482,oy+scale*274); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*482,oy+scale*274,ox+scale*471,oy+scale*308); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*471,oy+scale*308,ox+scale*439,oy+scale*327); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*439,oy+scale*327,ox+scale*398,oy+scale*347); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*347,oy+scale*203,ox+scale*369,oy+scale*153,ox+scale*388,oy+scale*166); renderer.triangle(ox+scale*293,oy+scale*203,ox+scale*252,oy+scale*166,ox+scale*271,oy+scale*153); renderer.triangle(ox+scale*277,oy+scale*254,ox+scale*229,oy+scale*281,ox+scale*222,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*285,ox+scale*331,oy+scale*339,ox+scale*309,oy+scale*339); renderer.triangle(ox+scale*363,oy+scale*254,ox+scale*418,oy+scale*260,ox+scale*411,oy+scale*281);

        }
        else if (index==17)
        {
            //gloxinia 6 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*88,ox+scale*347,oy+scale*81); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*347,oy+scale*81,ox+scale*380,oy+scale*71); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*380,oy+scale*71,ox+scale*436,oy+scale*101); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*436,oy+scale*101,ox+scale*444,oy+scale*137); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*444,oy+scale*137,ox+scale*452,oy+scale*164); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*164,ox+scale*196,oy+scale*137); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*196,oy+scale*137,ox+scale*204,oy+scale*104); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*204,oy+scale*104,ox+scale*257,oy+scale*70); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*257,oy+scale*70,ox+scale*293,oy+scale*81); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*293,oy+scale*81,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*316,ox+scale*169,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*169,oy+scale*296,ox+scale*144,oy+scale*272); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*272,ox+scale*141,oy+scale*210); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*141,oy+scale*210,ox+scale*169,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*169,oy+scale*184,ox+scale*188,oy+scale*164); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*392,ox+scale*293,oy+scale*399); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*293,oy+scale*399,ox+scale*260,oy+scale*409); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*260,oy+scale*409,ox+scale*204,oy+scale*379); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*204,oy+scale*379,ox+scale*196,oy+scale*343); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*196,oy+scale*343,ox+scale*188,oy+scale*316); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*316,ox+scale*444,oy+scale*343); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*444,oy+scale*343,ox+scale*436,oy+scale*376); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*436,oy+scale*376,ox+scale*383,oy+scale*410); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*383,oy+scale*410,ox+scale*347,oy+scale*399); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*347,oy+scale*399,ox+scale*320,oy+scale*392); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*164,ox+scale*471,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*471,oy+scale*184,ox+scale*496,oy+scale*208); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*496,oy+scale*208,ox+scale*499,oy+scale*270); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*499,oy+scale*270,ox+scale*471,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*471,oy+scale*296,ox+scale*452,oy+scale*316); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*108,ox+scale*358,oy+scale*98); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*358,oy+scale*98,ox+scale*389,oy+scale*90); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*389,oy+scale*90,ox+scale*416,oy+scale*105); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*416,oy+scale*105,ox+scale*424,oy+scale*136); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*136,ox+scale*434,oy+scale*174); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*206,oy+scale*174,ox+scale*216,oy+scale*136); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*136,ox+scale*224,oy+scale*105); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*224,oy+scale*105,ox+scale*251,oy+scale*90); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*251,oy+scale*90,ox+scale*282,oy+scale*98); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*282,oy+scale*98,ox+scale*320,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*206,oy+scale*306,ox+scale*178,oy+scale*278); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*178,oy+scale*278,ox+scale*155,oy+scale*255); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*155,oy+scale*255,ox+scale*155,oy+scale*225); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*155,oy+scale*225,ox+scale*178,oy+scale*202); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*178,oy+scale*202,ox+scale*206,oy+scale*174); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*372,ox+scale*282,oy+scale*382); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*282,oy+scale*382,ox+scale*251,oy+scale*390); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*251,oy+scale*390,ox+scale*224,oy+scale*375); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*224,oy+scale*375,ox+scale*216,oy+scale*344); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*344,ox+scale*206,oy+scale*306); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*434,oy+scale*306,ox+scale*424,oy+scale*344); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*344,ox+scale*416,oy+scale*375); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*416,oy+scale*375,ox+scale*389,oy+scale*390); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*389,oy+scale*390,ox+scale*358,oy+scale*382); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*358,oy+scale*382,ox+scale*320,oy+scale*372); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*434,oy+scale*174,ox+scale*462,oy+scale*202); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*462,oy+scale*202,ox+scale*485,oy+scale*225); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*485,oy+scale*225,ox+scale*485,oy+scale*255); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*485,oy+scale*255,ox+scale*462,oy+scale*278); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*462,oy+scale*278,ox+scale*434,oy+scale*306); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*343,oy+scale*201,ox+scale*362,oy+scale*149,ox+scale*378,oy+scale*159); renderer.triangle(ox+scale*297,oy+scale*201,ox+scale*262,oy+scale*159,ox+scale*278,oy+scale*149); renderer.triangle(ox+scale*275,oy+scale*240,ox+scale*220,oy+scale*249,ox+scale*220,oy+scale*231); renderer.triangle(ox+scale*297,oy+scale*279,ox+scale*278,oy+scale*331,ox+scale*262,oy+scale*321); renderer.triangle(ox+scale*343,oy+scale*279,ox+scale*378,oy+scale*321,ox+scale*362,oy+scale*331); renderer.triangle(ox+scale*365,oy+scale*240,ox+scale*420,oy+scale*231,ox+scale*420,oy+scale*249);

        }
        else if (index==18)
        {
            //daylily 3 20190924
            renderer.setColor(secondaryColour); renderer.triangle(ox+scale*324,oy+scale*192,ox+scale*432,oy+scale*176,ox+scale*364,oy+scale*260); renderer.triangle(ox+scale*276,oy+scale*261,ox+scale*209,oy+scale*175,ox+scale*315,oy+scale*192); renderer.triangle(ox+scale*360,oy+scale*267,ox+scale*319,oy+scale*369,ox+scale*281,oy+scale*268); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*68,ox+scale*374,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*374,oy+scale*209,ox+scale*469,oy+scale*326); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*171,oy+scale*326,ox+scale*266,oy+scale*209); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*266,oy+scale*209,ox+scale*320,oy+scale*68); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*469,oy+scale*326,ox+scale*320,oy+scale*302); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*302,ox+scale*171,oy+scale*326); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*332,oy+scale*232); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*332,oy+scale*232,ox+scale*424,oy+scale*300); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*300,ox+scale*307,oy+scale*234); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*307,oy+scale*234,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*300,ox+scale*321,oy+scale*254); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*321,oy+scale*254,ox+scale*216,oy+scale*300);

        }
        else if (index==19)
        {
            //daylily 5 20190924
            renderer.setColor(secondaryColour); renderer.triangle(ox+scale*322,oy+scale*192,ox+scale*396,oy+scale*136,ox+scale*365,oy+scale*222); renderer.triangle(ox+scale*275,oy+scale*223,ox+scale*244,oy+scale*135,ox+scale*317,oy+scale*192); renderer.triangle(ox+scale*290,oy+scale*278,ox+scale*197,oy+scale*280,ox+scale*273,oy+scale*228); renderer.triangle(ox+scale*346,oy+scale*280,ox+scale*320,oy+scale*369,ox+scale*294,oy+scale*281); renderer.triangle(ox+scale*366,oy+scale*227,ox+scale*443,oy+scale*280,ox+scale*351,oy+scale*277); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*68,ox+scale*357,oy+scale*190); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*357,oy+scale*190,ox+scale*484,oy+scale*187); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*156,oy+scale*187,ox+scale*283,oy+scale*190); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*190,ox+scale*320,oy+scale*68); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*219,oy+scale*379,ox+scale*261,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*261,oy+scale*259,ox+scale*156,oy+scale*187); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*421,oy+scale*379,ox+scale*320,oy+scale*302); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*302,ox+scale*219,oy+scale*379); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*484,oy+scale*187,ox+scale*379,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*379,oy+scale*259,ox+scale*421,oy+scale*379); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*328,oy+scale*228); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*328,oy+scale*228,ox+scale*434,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*206,oy+scale*203,ox+scale*311,oy+scale*229); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*311,oy+scale*229,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*249,oy+scale*337,ox+scale*306,oy+scale*245); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*306,oy+scale*245,ox+scale*206,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*391,oy+scale*337,ox+scale*321,oy+scale*254); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*321,oy+scale*254,ox+scale*249,oy+scale*337); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*434,oy+scale*203,ox+scale*334,oy+scale*244); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*334,oy+scale*244,ox+scale*391,oy+scale*337);

        }
        else if (index==20)
        {
            //daylily 6 20190924
            renderer.setColor(secondaryColour); renderer.triangle(ox+scale*322,oy+scale*192,ox+scale*385,oy+scale*128,ox+scale*361,oy+scale*214); renderer.triangle(ox+scale*279,oy+scale*214,ox+scale*256,oy+scale*128,ox+scale*318,oy+scale*192); renderer.triangle(ox+scale*277,oy+scale*262,ox+scale*191,oy+scale*240,ox+scale*277,oy+scale*218); renderer.triangle(ox+scale*318,oy+scale*288,ox+scale*255,oy+scale*352,ox+scale*279,oy+scale*266); renderer.triangle(ox+scale*361,oy+scale*266,ox+scale*384,oy+scale*352,ox+scale*322,oy+scale*288); renderer.triangle(ox+scale*363,oy+scale*218,ox+scale*449,oy+scale*240,ox+scale*363,oy+scale*262); renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*68,ox+scale*351,oy+scale*186); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*351,oy+scale*186,ox+scale*469,oy+scale*154); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*171,oy+scale*154,ox+scale*289,oy+scale*186); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*289,oy+scale*186,ox+scale*320,oy+scale*68); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*171,oy+scale*326,ox+scale*258,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*258,oy+scale*240,ox+scale*171,oy+scale*154); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*412,ox+scale*289,oy+scale*294); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*289,oy+scale*294,ox+scale*171,oy+scale*326); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*469,oy+scale*326,ox+scale*351,oy+scale*294); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*351,oy+scale*294,ox+scale*320,oy+scale*412); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*469,oy+scale*154,ox+scale*382,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*382,oy+scale*240,ox+scale*469,oy+scale*326); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*120,ox+scale*327,oy+scale*227); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*327,oy+scale*227,ox+scale*424,oy+scale*180); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*180,ox+scale*312,oy+scale*228); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*312,oy+scale*228,ox+scale*320,oy+scale*120); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*300,ox+scale*306,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*306,oy+scale*240,ox+scale*216,oy+scale*180); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*360,ox+scale*313,oy+scale*253); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*313,oy+scale*253,ox+scale*216,oy+scale*300); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*300,ox+scale*328,oy+scale*252); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*328,oy+scale*252,ox+scale*320,oy+scale*360); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*180,ox+scale*334,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*334,oy+scale*240,ox+scale*424,oy+scale*300);

        }

        else if (index==21)
        {
            //hibiscus 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*243,oy+scale*148,ox+scale*362,oy+scale*66); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*362,oy+scale*66,ox+scale*490,oy+scale*181); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*490,oy+scale*181,ox+scale*492,oy+scale*290); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*492,oy+scale*290,ox+scale*452,oy+scale*316); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*279,oy+scale*353,ox+scale*148,oy+scale*290); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*148,oy+scale*290,ox+scale*184,oy+scale*122); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*184,oy+scale*122,ox+scale*278,oy+scale*66); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*278,oy+scale*66,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*438,oy+scale*219,ox+scale*449,oy+scale*364); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*449,oy+scale*364,ox+scale*286,oy+scale*417); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*286,oy+scale*417,ox+scale*191,oy+scale*364); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*191,oy+scale*364,ox+scale*188,oy+scale*316); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*436,oy+scale*220,ox+scale*400,oy+scale*180,ox+scale*348,oy+scale*176); renderer.triangle(ox+scale*436,oy+scale*220,ox+scale*348,oy+scale*176,ox+scale*316,oy+scale*204); renderer.triangle(ox+scale*436,oy+scale*220,ox+scale*316,oy+scale*204,ox+scale*312,oy+scale*224); renderer.triangle(ox+scale*436,oy+scale*220,ox+scale*312,oy+scale*224,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*245,oy+scale*150,ox+scale*228,oy+scale*201,ox+scale*251,oy+scale*248); renderer.triangle(ox+scale*245,oy+scale*150,ox+scale*251,oy+scale*248,ox+scale*291,oy+scale*261); renderer.triangle(ox+scale*245,oy+scale*150,ox+scale*291,oy+scale*261,ox+scale*310,oy+scale*255); renderer.triangle(ox+scale*245,oy+scale*150,ox+scale*310,oy+scale*255,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*279,oy+scale*350,ox+scale*332,oy+scale*339,ox+scale*361,oy+scale*296); renderer.triangle(ox+scale*279,oy+scale*350,ox+scale*361,oy+scale*296,ox+scale*353,oy+scale*255); renderer.triangle(ox+scale*279,oy+scale*350,ox+scale*353,oy+scale*255,ox+scale*338,oy+scale*241); renderer.triangle(ox+scale*279,oy+scale*350,ox+scale*338,oy+scale*241,ox+scale*320,oy+scale*240); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*356,oy+scale*124,ox+scale*432,oy+scale*156,ox+scale*352,oy+scale*136); renderer.triangle(ox+scale*356,oy+scale*124,ox+scale*352,oy+scale*136,ox+scale*304,oy+scale*152); renderer.triangle(ox+scale*202,oy+scale*267,ox+scale*191,oy+scale*185,ox+scale*214,oy+scale*264); renderer.triangle(ox+scale*202,oy+scale*267,ox+scale*214,oy+scale*264,ox+scale*252,oy+scale*298); renderer.triangle(ox+scale*402,oy+scale*329,ox+scale*337,oy+scale*379,ox+scale*394,oy+scale*320); renderer.triangle(ox+scale*402,oy+scale*329,ox+scale*394,oy+scale*320,ox+scale*404,oy+scale*270);

        }

        else if (index==22)
        {
            //hibiscus 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*260,oy+scale*136,ox+scale*352,oy+scale*64); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*352,oy+scale*64,ox+scale*464,oy+scale*132); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*464,oy+scale*132,ox+scale*496,oy+scale*208); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*496,oy+scale*208,ox+scale*472,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*300,ox+scale*144,oy+scale*208); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*208,ox+scale*212,oy+scale*96); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*212,oy+scale*96,ox+scale*288,oy+scale*64); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*288,oy+scale*64,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*380,oy+scale*344,ox+scale*288,oy+scale*416); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*288,oy+scale*416,ox+scale*176,oy+scale*348); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*176,oy+scale*348,ox+scale*144,oy+scale*272); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*272,ox+scale*168,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*180,ox+scale*496,oy+scale*272); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*496,oy+scale*272,ox+scale*428,oy+scale*384); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*428,oy+scale*384,ox+scale*352,oy+scale*416); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*352,oy+scale*416,ox+scale*320,oy+scale*392); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*422,oy+scale*181,ox+scale*384,oy+scale*163,ox+scale*341,oy+scale*173); renderer.triangle(ox+scale*422,oy+scale*181,ox+scale*341,oy+scale*173,ox+scale*317,oy+scale*204); renderer.triangle(ox+scale*422,oy+scale*181,ox+scale*317,oy+scale*204,ox+scale*314,oy+scale*223); renderer.triangle(ox+scale*422,oy+scale*181,ox+scale*314,oy+scale*223,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*261,oy+scale*138,ox+scale*243,oy+scale*176,ox+scale*253,oy+scale*219); renderer.triangle(ox+scale*261,oy+scale*138,ox+scale*253,oy+scale*219,ox+scale*284,oy+scale*243); renderer.triangle(ox+scale*261,oy+scale*138,ox+scale*284,oy+scale*243,ox+scale*303,oy+scale*246); renderer.triangle(ox+scale*261,oy+scale*138,ox+scale*303,oy+scale*246,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*218,oy+scale*299,ox+scale*256,oy+scale*317,ox+scale*299,oy+scale*307); renderer.triangle(ox+scale*218,oy+scale*299,ox+scale*299,oy+scale*307,ox+scale*323,oy+scale*276); renderer.triangle(ox+scale*218,oy+scale*299,ox+scale*323,oy+scale*276,ox+scale*326,oy+scale*257); renderer.triangle(ox+scale*218,oy+scale*299,ox+scale*326,oy+scale*257,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*379,oy+scale*342,ox+scale*397,oy+scale*304,ox+scale*387,oy+scale*261); renderer.triangle(ox+scale*379,oy+scale*342,ox+scale*387,oy+scale*261,ox+scale*356,oy+scale*237); renderer.triangle(ox+scale*379,oy+scale*342,ox+scale*356,oy+scale*237,ox+scale*337,oy+scale*234); renderer.triangle(ox+scale*379,oy+scale*342,ox+scale*337,oy+scale*234,ox+scale*320,oy+scale*240); renderer.setColor(secondaryColour);  renderer.triangle(ox+scale*347,oy+scale*122,ox+scale*410,oy+scale*133,ox+scale*344,oy+scale*134); renderer.triangle(ox+scale*347,oy+scale*122,ox+scale*344,oy+scale*134,ox+scale*308,oy+scale*151); renderer.triangle(ox+scale*202,oy+scale*213,ox+scale*213,oy+scale*150,ox+scale*214,oy+scale*216); renderer.triangle(ox+scale*202,oy+scale*213,ox+scale*214,oy+scale*216,ox+scale*231,oy+scale*252); renderer.triangle(ox+scale*293,oy+scale*358,ox+scale*230,oy+scale*347,ox+scale*296,oy+scale*346); renderer.triangle(ox+scale*293,oy+scale*358,ox+scale*296,oy+scale*346,ox+scale*332,oy+scale*329); renderer.triangle(ox+scale*438,oy+scale*267,ox+scale*427,oy+scale*330,ox+scale*426,oy+scale*264); renderer.triangle(ox+scale*438,oy+scale*267,ox+scale*426,oy+scale*264,ox+scale*409,oy+scale*228);

        }

        else if (index==23)
        {
            //hibiscus 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*271,oy+scale*130,ox+scale*346,oy+scale*63); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*346,oy+scale*63,ox+scale*442,oy+scale*107); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*442,oy+scale*107,ox+scale*480,oy+scale*161); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*480,oy+scale*161,ox+scale*465,oy+scale*193); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*201,oy+scale*253,ox+scale*160,oy+scale*161); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*160,oy+scale*161,ox+scale*231,oy+scale*83); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*231,oy+scale*83,ox+scale*294,oy+scale*63); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*294,oy+scale*63,ox+scale*320,oy+scale*88); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*295,oy+scale*357,ox+scale*195,oy+scale*368); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*195,oy+scale*368,ox+scale*144,oy+scale*276); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*276,ox+scale*144,oy+scale*210); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*144,oy+scale*210,ox+scale*175,oy+scale*193); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*300,ox+scale*403,oy+scale*398); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*403,oy+scale*398,ox+scale*300,oy+scale*419); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*419,ox+scale*237,oy+scale*398); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*237,oy+scale*398,ox+scale*231,oy+scale*363); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*409,oy+scale*160,ox+scale*496,oy+scale*210); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*496,oy+scale*210,ox+scale*484,oy+scale*315); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*484,oy+scale*315,ox+scale*445,oy+scale*368); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*445,oy+scale*368,ox+scale*409,oy+scale*363); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*408,oy+scale*161,ox+scale*373,oy+scale*155,ox+scale*337,oy+scale*172); renderer.triangle(ox+scale*408,oy+scale*161,ox+scale*337,oy+scale*172,ox+scale*318,oy+scale*204); renderer.triangle(ox+scale*408,oy+scale*161,ox+scale*318,oy+scale*204,ox+scale*315,oy+scale*223); renderer.triangle(ox+scale*408,oy+scale*161,ox+scale*315,oy+scale*223,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*272,oy+scale*132,ox+scale*256,oy+scale*164,ox+scale*261,oy+scale*203); renderer.triangle(ox+scale*272,oy+scale*132,ox+scale*261,oy+scale*203,ox+scale*285,oy+scale*231); renderer.triangle(ox+scale*272,oy+scale*132,ox+scale*285,oy+scale*231,ox+scale*302,oy+scale*239); renderer.triangle(ox+scale*272,oy+scale*132,ox+scale*302,oy+scale*239,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*203,oy+scale*252,ox+scale*227,oy+scale*278,ox+scale*266,oy+scale*285); renderer.triangle(ox+scale*203,oy+scale*252,ox+scale*266,oy+scale*285,ox+scale*301,oy+scale*271); renderer.triangle(ox+scale*203,oy+scale*252,ox+scale*301,oy+scale*271,ox+scale*314,oy+scale*257); renderer.triangle(ox+scale*203,oy+scale*252,ox+scale*314,oy+scale*257,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*295,oy+scale*355,ox+scale*327,oy+scale*340,ox+scale*346,oy+scale*305); renderer.triangle(ox+scale*295,oy+scale*355,ox+scale*346,oy+scale*305,ox+scale*343,oy+scale*268); renderer.triangle(ox+scale*295,oy+scale*355,ox+scale*343,oy+scale*268,ox+scale*334,oy+scale*251); renderer.triangle(ox+scale*295,oy+scale*355,ox+scale*334,oy+scale*251,ox+scale*320,oy+scale*240); renderer.triangle(ox+scale*422,oy+scale*299,ox+scale*417,oy+scale*264,ox+scale*390,oy+scale*235); renderer.triangle(ox+scale*422,oy+scale*299,ox+scale*390,oy+scale*235,ox+scale*354,oy+scale*227); renderer.triangle(ox+scale*422,oy+scale*299,ox+scale*354,oy+scale*227,ox+scale*335,oy+scale*230); renderer.triangle(ox+scale*422,oy+scale*299,ox+scale*335,oy+scale*230,ox+scale*320,oy+scale*240); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*342,oy+scale*121,ox+scale*394,oy+scale*121,ox+scale*339,oy+scale*133); renderer.triangle(ox+scale*342,oy+scale*121,ox+scale*339,oy+scale*133,ox+scale*310,oy+scale*151); renderer.triangle(ox+scale*213,oy+scale*182,ox+scale*230,oy+scale*133,ox+scale*224,oy+scale*188); renderer.triangle(ox+scale*213,oy+scale*182,ox+scale*224,oy+scale*188,ox+scale*232,oy+scale*222); renderer.triangle(ox+scale*232,oy+scale*324,ox+scale*190,oy+scale*293,ox+scale*241,oy+scale*315); renderer.triangle(ox+scale*232,oy+scale*324,ox+scale*241,oy+scale*315,ox+scale*276,oy+scale*318); renderer.triangle(ox+scale*373,oy+scale*349,ox+scale*330,oy+scale*380,ox+scale*367,oy+scale*338); renderer.triangle(ox+scale*373,oy+scale*349,ox+scale*367,oy+scale*338,ox+scale*380,oy+scale*306); renderer.triangle(ox+scale*440,oy+scale*224,ox+scale*456,oy+scale*274,ox+scale*428,oy+scale*225); renderer.triangle(ox+scale*440,oy+scale*224,ox+scale*428,oy+scale*225,ox+scale*402,oy+scale*203);

        }

        else if (index==24)
        {
            //pansy 2 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*360,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*108,ox+scale*425,oy+scale*112); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*425,oy+scale*112,ox+scale*490,oy+scale*179); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*490,oy+scale*179,ox+scale*490,oy+scale*301); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*490,oy+scale*301,ox+scale*425,oy+scale*368); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*425,oy+scale*368,ox+scale*360,oy+scale*372); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*372,ox+scale*320,oy+scale*332); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*332,ox+scale*280,oy+scale*372); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*372,ox+scale*215,oy+scale*368); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*215,oy+scale*368,ox+scale*150,oy+scale*301); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*150,oy+scale*301,ox+scale*150,oy+scale*179); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*150,oy+scale*179,ox+scale*215,oy+scale*112); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*215,oy+scale*112,ox+scale*280,oy+scale*108); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*108,ox+scale*320,oy+scale*148); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*374,oy+scale*147); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*374,oy+scale*147,ox+scale*416,oy+scale*191); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*416,oy+scale*191,ox+scale*399,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*399,oy+scale*240,ox+scale*417,oy+scale*295); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*417,oy+scale*295,ox+scale*374,oy+scale*338); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*374,oy+scale*338,ox+scale*320,oy+scale*332); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*332,ox+scale*266,oy+scale*333); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*266,oy+scale*333,ox+scale*224,oy+scale*289); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*224,oy+scale*289,ox+scale*241,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*241,oy+scale*240,ox+scale*223,oy+scale*185); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*223,oy+scale*185,ox+scale*266,oy+scale*142); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*266,oy+scale*142,ox+scale*320,oy+scale*148); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*200,ox+scale*357,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*357,oy+scale*203,ox+scale*377,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*377,oy+scale*240,ox+scale*357,oy+scale*277); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*357,oy+scale*277,ox+scale*320,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*280,ox+scale*283,oy+scale*277); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*277,ox+scale*263,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*263,oy+scale*240,ox+scale*283,oy+scale*203); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*203,ox+scale*320,oy+scale*200);
        }
        else if (index==25)
        {
            //pansy 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*347,oy+scale*105); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*347,oy+scale*105,ox+scale*394,oy+scale*91); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*394,oy+scale*91,ox+scale*452,oy+scale*116); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*452,oy+scale*116,ox+scale*493,oy+scale*188); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*493,oy+scale*188,ox+scale*485,oy+scale*251); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*485,oy+scale*251,ox+scale*450,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*450,oy+scale*284,ox+scale*400,oy+scale*286); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*240,oy+scale*286,ox+scale*190,oy+scale*284); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*190,oy+scale*284,ox+scale*155,oy+scale*251); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*155,oy+scale*251,ox+scale*147,oy+scale*188); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*147,oy+scale*188,ox+scale*188,oy+scale*116); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*188,oy+scale*116,ox+scale*246,oy+scale*91); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*246,oy+scale*91,ox+scale*293,oy+scale*105); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*293,oy+scale*105,ox+scale*320,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*400,oy+scale*286,ox+scale*424,oy+scale*330); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*330,ox+scale*412,oy+scale*378); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*378,ox+scale*361,oy+scale*416); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*361,oy+scale*416,ox+scale*279,oy+scale*416); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*279,oy+scale*416,ox+scale*228,oy+scale*378); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*228,oy+scale*378,ox+scale*216,oy+scale*330); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*330,ox+scale*240,oy+scale*286); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*357,oy+scale*139); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*357,oy+scale*139,ox+scale*392,oy+scale*160); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*392,oy+scale*160,ox+scale*389,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*389,oy+scale*200,ox+scale*429,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*429,oy+scale*220,ox+scale*430,oy+scale*261); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*430,oy+scale*261,ox+scale*400,oy+scale*286); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*240,oy+scale*286,ox+scale*214,oy+scale*259); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*214,oy+scale*259,ox+scale*215,oy+scale*218); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*215,oy+scale*218,ox+scale*251,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*251,oy+scale*200,ox+scale*248,oy+scale*155); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*248,oy+scale*155,ox+scale*283,oy+scale*135); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*135,ox+scale*320,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*400,oy+scale*286,ox+scale*389,oy+scale*323); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*389,oy+scale*323,ox+scale*354,oy+scale*342); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*354,oy+scale*342,ox+scale*320,oy+scale*319); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*319,ox+scale*283,oy+scale*345); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*283,oy+scale*345,ox+scale*247,oy+scale*325); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*247,oy+scale*325,ox+scale*240,oy+scale*286); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*200,ox+scale*346,oy+scale*195); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*346,oy+scale*195,ox+scale*369,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*369,oy+scale*212,ox+scale*372,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*372,oy+scale*240,ox+scale*355,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*285,oy+scale*260,ox+scale*268,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*268,oy+scale*240,ox+scale*271,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*271,oy+scale*212,ox+scale*294,oy+scale*195); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*294,oy+scale*195,ox+scale*320,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*355,oy+scale*260,ox+scale*346,oy+scale*285); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*346,oy+scale*285,ox+scale*320,oy+scale*297); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*297,ox+scale*294,oy+scale*285); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*294,oy+scale*285,ox+scale*285,oy+scale*260);
        }
        else if (index==26)
        {
            //pansy 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*340,oy+scale*104); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*340,oy+scale*104,ox+scale*376,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*84,ox+scale*424,oy+scale*92); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*92,ox+scale*468,oy+scale*136); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*468,oy+scale*136,ox+scale*476,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*184,ox+scale*456,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*456,oy+scale*220,ox+scale*412,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*228,oy+scale*240,ox+scale*184,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*184,oy+scale*220,ox+scale*164,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*184,ox+scale*172,oy+scale*136); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*172,oy+scale*136,ox+scale*216,oy+scale*92); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*92,ox+scale*264,oy+scale*84); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*84,ox+scale*300,oy+scale*104); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*104,ox+scale*320,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*332,ox+scale*300,oy+scale*376); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*376,ox+scale*264,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*396,ox+scale*216,oy+scale*388); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*388,ox+scale*172,oy+scale*344); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*172,oy+scale*344,ox+scale*164,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*164,oy+scale*296,ox+scale*184,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*184,oy+scale*260,ox+scale*228,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*240,ox+scale*456,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*456,oy+scale*260,ox+scale*476,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*476,oy+scale*296,ox+scale*468,oy+scale*344); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*468,oy+scale*344,ox+scale*424,oy+scale*388); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*388,ox+scale*376,oy+scale*396); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*396,ox+scale*340,oy+scale*376); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*340,oy+scale*376,ox+scale*320,oy+scale*332); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*148,ox+scale*348,oy+scale*136); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*348,oy+scale*136,ox+scale*376,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*148,ox+scale*376,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*184,ox+scale*416,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*416,oy+scale*184,ox+scale*428,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*428,oy+scale*212,ox+scale*412,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*228,oy+scale*240,ox+scale*216,oy+scale*212); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*216,oy+scale*212,ox+scale*228,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*228,oy+scale*184,ox+scale*264,oy+scale*184); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*184,ox+scale*264,oy+scale*144); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*144,ox+scale*292,oy+scale*132); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*292,oy+scale*132,ox+scale*320,oy+scale*148); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*332,ox+scale*292,oy+scale*344); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*292,oy+scale*344,ox+scale*264,oy+scale*332); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*332,ox+scale*264,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*264,oy+scale*296,ox+scale*224,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*224,oy+scale*296,ox+scale*212,oy+scale*268); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*212,oy+scale*268,ox+scale*228,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*240,ox+scale*424,oy+scale*268); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*424,oy+scale*268,ox+scale*412,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*412,oy+scale*296,ox+scale*376,oy+scale*296); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*296,ox+scale*376,oy+scale*336); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*376,oy+scale*336,ox+scale*348,oy+scale*348); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*348,oy+scale*348,ox+scale*320,oy+scale*332); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*200,ox+scale*340,oy+scale*192); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*340,oy+scale*192,ox+scale*360,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*200,ox+scale*368,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*368,oy+scale*220,ox+scale*360,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*240,ox+scale*272,oy+scale*220); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*272,oy+scale*220,ox+scale*280,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*200,ox+scale*300,oy+scale*192); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*192,ox+scale*320,oy+scale*200); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*280,ox+scale*300,oy+scale*288); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*288,ox+scale*280,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*280,oy+scale*280,ox+scale*272,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*272,oy+scale*260,ox+scale*280,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*240,ox+scale*368,oy+scale*260); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*368,oy+scale*260,ox+scale*360,oy+scale*280); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*360,oy+scale*280,ox+scale*340,oy+scale*288); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*340,oy+scale*288,ox+scale*320,oy+scale*280);
        }
        else if (index==27)
        {
            //hydrangea 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*349,oy+scale*223,ox+scale*320,oy+scale*140,ox+scale*413,oy+scale*105); renderer.triangle(ox+scale*349,oy+scale*223,ox+scale*413,oy+scale*105,ox+scale*482,oy+scale*198); renderer.triangle(ox+scale*349,oy+scale*223,ox+scale*482,oy+scale*198,ox+scale*419,oy+scale*285); renderer.triangle(ox+scale*291,oy+scale*223,ox+scale*233,oy+scale*290,ox+scale*156,oy+scale*227); renderer.triangle(ox+scale*291,oy+scale*223,ox+scale*156,oy+scale*227,ox+scale*203,oy+scale*120); renderer.triangle(ox+scale*291,oy+scale*223,ox+scale*203,oy+scale*120,ox+scale*309,oy+scale*132); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*407,oy+scale*290,ox+scale*391,oy+scale*389); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*391,oy+scale*389,ox+scale*275,oy+scale*401); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*275,oy+scale*401,ox+scale*232,oy+scale*303); renderer.triangle(ox+scale*404,oy+scale*187,ox+scale*320,oy+scale*140,ox+scale*414,oy+scale*182); renderer.triangle(ox+scale*404,oy+scale*187,ox+scale*414,oy+scale*182,ox+scale*482,oy+scale*198); renderer.triangle(ox+scale*404,oy+scale*187,ox+scale*482,oy+scale*198,ox+scale*421,oy+scale*195); renderer.triangle(ox+scale*404,oy+scale*187,ox+scale*421,oy+scale*195,ox+scale*419,oy+scale*285); renderer.triangle(ox+scale*232,oy+scale*194,ox+scale*233,oy+scale*290,ox+scale*223,oy+scale*188); renderer.triangle(ox+scale*232,oy+scale*194,ox+scale*223,oy+scale*188,ox+scale*203,oy+scale*120); renderer.triangle(ox+scale*232,oy+scale*194,ox+scale*203,oy+scale*120,ox+scale*230,oy+scale*175); renderer.triangle(ox+scale*232,oy+scale*194,ox+scale*230,oy+scale*175,ox+scale*309,oy+scale*132); renderer.triangle(ox+scale*324,oy+scale*339,ox+scale*407,oy+scale*290,ox+scale*324,oy+scale*350); renderer.triangle(ox+scale*324,oy+scale*339,ox+scale*324,oy+scale*350,ox+scale*275,oy+scale*401); renderer.triangle(ox+scale*324,oy+scale*339,ox+scale*275,oy+scale*401,ox+scale*309,oy+scale*350); renderer.triangle(ox+scale*324,oy+scale*339,ox+scale*309,oy+scale*350,ox+scale*232,oy+scale*303); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*395,oy+scale*179,ox+scale*406,oy+scale*169); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*406,oy+scale*169,ox+scale*423,oy+scale*176); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*423,oy+scale*176,ox+scale*430,oy+scale*194); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*430,oy+scale*194,ox+scale*424,oy+scale*201); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*424,oy+scale*201,ox+scale*415,oy+scale*202); renderer.triangle(ox+scale*394,oy+scale*193,ox+scale*415,oy+scale*202,ox+scale*403,oy+scale*197); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*230,oy+scale*205,ox+scale*216,oy+scale*201); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*216,oy+scale*201,ox+scale*213,oy+scale*182); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*213,oy+scale*182,ox+scale*225,oy+scale*168); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*225,oy+scale*168,ox+scale*234,oy+scale*169); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*234,oy+scale*169,ox+scale*240,oy+scale*176); renderer.triangle(ox+scale*242,oy+scale*199,ox+scale*240,oy+scale*176,ox+scale*241,oy+scale*190); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*335,oy+scale*336,ox+scale*339,oy+scale*350); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*339,oy+scale*350,ox+scale*324,oy+scale*362); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*324,oy+scale*362,ox+scale*305,oy+scale*358); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*305,oy+scale*358,ox+scale*301,oy+scale*350); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*301,oy+scale*350,ox+scale*305,oy+scale*341); renderer.triangle(ox+scale*324,oy+scale*328,ox+scale*305,oy+scale*341,ox+scale*316,oy+scale*333);
        }
        else if (index==28)
        {
            //hydrangea 4 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*344,oy+scale*216,ox+scale*320,oy+scale*140,ox+scale*392,oy+scale*92); renderer.triangle(ox+scale*344,oy+scale*216,ox+scale*392,oy+scale*92,ox+scale*460,oy+scale*148); renderer.triangle(ox+scale*344,oy+scale*216,ox+scale*460,oy+scale*148,ox+scale*428,oy+scale*232); renderer.triangle(ox+scale*296,oy+scale*216,ox+scale*220,oy+scale*240,ox+scale*172,oy+scale*168); renderer.triangle(ox+scale*296,oy+scale*216,ox+scale*172,oy+scale*168,ox+scale*228,oy+scale*100); renderer.triangle(ox+scale*296,oy+scale*216,ox+scale*228,oy+scale*100,ox+scale*312,oy+scale*132); renderer.triangle(ox+scale*296,oy+scale*264,ox+scale*320,oy+scale*340,ox+scale*248,oy+scale*388); renderer.triangle(ox+scale*296,oy+scale*264,ox+scale*248,oy+scale*388,ox+scale*180,oy+scale*332); renderer.triangle(ox+scale*296,oy+scale*264,ox+scale*180,oy+scale*332,ox+scale*212,oy+scale*248); renderer.triangle(ox+scale*344,oy+scale*264,ox+scale*420,oy+scale*240,ox+scale*468,oy+scale*312); renderer.triangle(ox+scale*344,oy+scale*264,ox+scale*468,oy+scale*312,ox+scale*412,oy+scale*380); renderer.triangle(ox+scale*344,oy+scale*264,ox+scale*412,oy+scale*380,ox+scale*328,oy+scale*348); renderer.triangle(ox+scale*388,oy+scale*168,ox+scale*320,oy+scale*140,ox+scale*396,oy+scale*160); renderer.triangle(ox+scale*388,oy+scale*168,ox+scale*396,oy+scale*160,ox+scale*460,oy+scale*148); renderer.triangle(ox+scale*388,oy+scale*168,ox+scale*460,oy+scale*148,ox+scale*404,oy+scale*168); renderer.triangle(ox+scale*388,oy+scale*168,ox+scale*404,oy+scale*168,ox+scale*428,oy+scale*232); renderer.triangle(ox+scale*248,oy+scale*172,ox+scale*220,oy+scale*240,ox+scale*240,oy+scale*164); renderer.triangle(ox+scale*248,oy+scale*172,ox+scale*240,oy+scale*164,ox+scale*228,oy+scale*100); renderer.triangle(ox+scale*248,oy+scale*172,ox+scale*228,oy+scale*100,ox+scale*248,oy+scale*156); renderer.triangle(ox+scale*248,oy+scale*172,ox+scale*248,oy+scale*156,ox+scale*312,oy+scale*132); renderer.triangle(ox+scale*252,oy+scale*312,ox+scale*320,oy+scale*340,ox+scale*244,oy+scale*320); renderer.triangle(ox+scale*252,oy+scale*312,ox+scale*244,oy+scale*320,ox+scale*180,oy+scale*332); renderer.triangle(ox+scale*252,oy+scale*312,ox+scale*180,oy+scale*332,ox+scale*236,oy+scale*312); renderer.triangle(ox+scale*252,oy+scale*312,ox+scale*236,oy+scale*312,ox+scale*212,oy+scale*248); renderer.triangle(ox+scale*392,oy+scale*308,ox+scale*420,oy+scale*240,ox+scale*400,oy+scale*316); renderer.triangle(ox+scale*392,oy+scale*308,ox+scale*400,oy+scale*316,ox+scale*412,oy+scale*380); renderer.triangle(ox+scale*392,oy+scale*308,ox+scale*412,oy+scale*380,ox+scale*392,oy+scale*324); renderer.triangle(ox+scale*392,oy+scale*308,ox+scale*392,oy+scale*324,ox+scale*328,oy+scale*348); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*380,oy+scale*164,ox+scale*388,oy+scale*152); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*388,oy+scale*152,ox+scale*404,oy+scale*152); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*404,oy+scale*152,ox+scale*412,oy+scale*164); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*412,oy+scale*164,ox+scale*408,oy+scale*172); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*408,oy+scale*172,ox+scale*400,oy+scale*176); renderer.triangle(ox+scale*380,oy+scale*176,ox+scale*400,oy+scale*176,ox+scale*388,oy+scale*176); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*244,oy+scale*180,ox+scale*232,oy+scale*172); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*232,oy+scale*172,ox+scale*232,oy+scale*156); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*232,oy+scale*156,ox+scale*244,oy+scale*148); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*244,oy+scale*148,ox+scale*252,oy+scale*152); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*252,oy+scale*152,ox+scale*256,oy+scale*160); renderer.triangle(ox+scale*256,oy+scale*180,ox+scale*256,oy+scale*160,ox+scale*256,oy+scale*172); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*260,oy+scale*316,ox+scale*252,oy+scale*328); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*252,oy+scale*328,ox+scale*236,oy+scale*328); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*236,oy+scale*328,ox+scale*228,oy+scale*316); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*228,oy+scale*316,ox+scale*232,oy+scale*308); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*232,oy+scale*308,ox+scale*240,oy+scale*304); renderer.triangle(ox+scale*260,oy+scale*304,ox+scale*240,oy+scale*304,ox+scale*252,oy+scale*304); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*396,oy+scale*300,ox+scale*408,oy+scale*308); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*408,oy+scale*308,ox+scale*408,oy+scale*324); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*408,oy+scale*324,ox+scale*396,oy+scale*332); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*396,oy+scale*332,ox+scale*388,oy+scale*328); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*388,oy+scale*328,ox+scale*384,oy+scale*320); renderer.triangle(ox+scale*384,oy+scale*300,ox+scale*384,oy+scale*320,ox+scale*384,oy+scale*308);
        }
        else if (index==29)
        {
            //hydrangea 5 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*340,oy+scale*213,ox+scale*320,oy+scale*140,ox+scale*378,oy+scale*86); renderer.triangle(ox+scale*340,oy+scale*213,ox+scale*378,oy+scale*86,ox+scale*439,oy+scale*122); renderer.triangle(ox+scale*340,oy+scale*213,ox+scale*439,oy+scale*122,ox+scale*421,oy+scale*201); renderer.triangle(ox+scale*300,oy+scale*213,ox+scale*225,oy+scale*209,ox+scale*192,oy+scale*137); renderer.triangle(ox+scale*300,oy+scale*213,ox+scale*192,oy+scale*137,ox+scale*245,oy+scale*90); renderer.triangle(ox+scale*300,oy+scale*213,ox+scale*245,oy+scale*90,ox+scale*314,oy+scale*132); renderer.triangle(ox+scale*288,oy+scale*250,ox+scale*261,oy+scale*321,ox+scale*182,oy+scale*330); renderer.triangle(ox+scale*288,oy+scale*250,ox+scale*182,oy+scale*330,ox+scale*154,oy+scale*265); renderer.triangle(ox+scale*288,oy+scale*250,ox+scale*154,oy+scale*265,ox+scale*215,oy+scale*213); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*379,oy+scale*321,ox+scale*363,oy+scale*399); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*363,oy+scale*399,ox+scale*293,oy+scale*405); renderer.triangle(ox+scale*320,oy+scale*274,ox+scale*293,oy+scale*405,ox+scale*262,oy+scale*331); renderer.triangle(ox+scale*352,oy+scale*250,ox+scale*415,oy+scale*209,ox+scale*484,oy+scale*248); renderer.triangle(ox+scale*352,oy+scale*250,ox+scale*484,oy+scale*248,ox+scale*469,oy+scale*317); renderer.triangle(ox+scale*352,oy+scale*250,ox+scale*469,oy+scale*317,ox+scale*389,oy+scale*324); renderer.triangle(ox+scale*376,oy+scale*159,ox+scale*320,oy+scale*140,ox+scale*383,oy+scale*149); renderer.triangle(ox+scale*376,oy+scale*159,ox+scale*383,oy+scale*149,ox+scale*439,oy+scale*122); renderer.triangle(ox+scale*376,oy+scale*159,ox+scale*439,oy+scale*122,ox+scale*390,oy+scale*155); renderer.triangle(ox+scale*376,oy+scale*159,ox+scale*390,oy+scale*155,ox+scale*421,oy+scale*201); renderer.triangle(ox+scale*260,oy+scale*161,ox+scale*225,oy+scale*209,ox+scale*253,oy+scale*152); renderer.triangle(ox+scale*260,oy+scale*161,ox+scale*253,oy+scale*152,ox+scale*245,oy+scale*90); renderer.triangle(ox+scale*260,oy+scale*161,ox+scale*245,oy+scale*90,ox+scale*261,oy+scale*147); renderer.triangle(ox+scale*260,oy+scale*161,ox+scale*261,oy+scale*147,ox+scale*314,oy+scale*132); renderer.triangle(ox+scale*227,oy+scale*273,ox+scale*261,oy+scale*321,ox+scale*216,oy+scale*276); renderer.triangle(ox+scale*227,oy+scale*273,ox+scale*216,oy+scale*276,ox+scale*154,oy+scale*265); renderer.triangle(ox+scale*227,oy+scale*273,ox+scale*154,oy+scale*265,ox+scale*213,oy+scale*268); renderer.triangle(ox+scale*227,oy+scale*273,ox+scale*213,oy+scale*268,ox+scale*215,oy+scale*213); renderer.triangle(ox+scale*322,oy+scale*339,ox+scale*379,oy+scale*321,ox+scale*322,oy+scale*350); renderer.triangle(ox+scale*322,oy+scale*339,ox+scale*322,oy+scale*350,ox+scale*293,oy+scale*405); renderer.triangle(ox+scale*322,oy+scale*339,ox+scale*293,oy+scale*405,ox+scale*313,oy+scale*350); renderer.triangle(ox+scale*322,oy+scale*339,ox+scale*313,oy+scale*350,ox+scale*262,oy+scale*331); renderer.triangle(ox+scale*415,oy+scale*268,ox+scale*415,oy+scale*209,ox+scale*426,oy+scale*272); renderer.triangle(ox+scale*415,oy+scale*268,ox+scale*426,oy+scale*272,ox+scale*469,oy+scale*317); renderer.triangle(ox+scale*415,oy+scale*268,ox+scale*469,oy+scale*317,ox+scale*423,oy+scale*281); renderer.triangle(ox+scale*415,oy+scale*268,ox+scale*423,oy+scale*281,ox+scale*389,oy+scale*324); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*369,oy+scale*157,ox+scale*376,oy+scale*144); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*376,oy+scale*144,ox+scale*390,oy+scale*140); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*390,oy+scale*140,ox+scale*397,oy+scale*149); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*397,oy+scale*149,ox+scale*394,oy+scale*157); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*394,oy+scale*157,ox+scale*387,oy+scale*163); renderer.triangle(ox+scale*370,oy+scale*168,ox+scale*387,oy+scale*163,ox+scale*377,oy+scale*166); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*256,oy+scale*167,ox+scale*246,oy+scale*157); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*246,oy+scale*157,ox+scale*247,oy+scale*143); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*247,oy+scale*143,ox+scale*257,oy+scale*138); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*257,oy+scale*138,ox+scale*264,oy+scale*144); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*264,oy+scale*144,ox+scale*267,oy+scale*152); renderer.triangle(ox+scale*267,oy+scale*170,ox+scale*267,oy+scale*152,ox+scale*267,oy+scale*163); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*231,oy+scale*278,ox+scale*218,oy+scale*285); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*218,oy+scale*285,ox+scale*205,oy+scale*280); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*205,oy+scale*280,ox+scale*204,oy+scale*268); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*204,oy+scale*268,ox+scale*211,oy+scale*263); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*211,oy+scale*263,ox+scale*220,oy+scale*263); renderer.triangle(ox+scale*237,oy+scale*269,ox+scale*220,oy+scale*263,ox+scale*231,oy+scale*267); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*329,oy+scale*336,ox+scale*331,oy+scale*351); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*331,oy+scale*351,ox+scale*322,oy+scale*362); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*322,oy+scale*362,ox+scale*311,oy+scale*359); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*311,oy+scale*359,ox+scale*309,oy+scale*351); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*309,oy+scale*351,ox+scale*311,oy+scale*342); renderer.triangle(ox+scale*322,oy+scale*328,ox+scale*311,oy+scale*342,ox+scale*318,oy+scale*333); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*414,oy+scale*261,ox+scale*429,oy+scale*263); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*429,oy+scale*263,ox+scale*436,oy+scale*275); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*436,oy+scale*275,ox+scale*430,oy+scale*285); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*430,oy+scale*285,ox+scale*422,oy+scale*285); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*422,oy+scale*285,ox+scale*414,oy+scale*280); renderer.triangle(ox+scale*404,oy+scale*265,ox+scale*414,oy+scale*280,ox+scale*408,oy+scale*271);
        }
        else if (index==30)
        {
            //oleander 3 20190924
            renderer.setColor(primaryColour); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*432,oy+scale*128,ox+scale*487,oy+scale*174); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*487,oy+scale*174,ox+scale*496,oy+scale*245); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*496,oy+scale*245,ox+scale*480,oy+scale*277); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*480,oy+scale*277,ox+scale*454,oy+scale*286); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*454,oy+scale*286,ox+scale*430,oy+scale*261); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*430,oy+scale*261,ox+scale*419,oy+scale*243); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*419,oy+scale*243,ox+scale*375,oy+scale*230); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*375,oy+scale*230,ox+scale*344,oy+scale*240); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*341,oy+scale*252,ox+scale*320,oy+scale*236); renderer.triangle(ox+scale*383,oy+scale*135,ox+scale*320,oy+scale*236,ox+scale*320,oy+scale*216); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*167,oy+scale*199,ox+scale*180,oy+scale*129); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*180,oy+scale*129,ox+scale*236,oy+scale*85); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*236,oy+scale*85,ox+scale*272,oy+scale*83); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*272,oy+scale*83,ox+scale*293,oy+scale*101); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*293,oy+scale*101,ox+scale*283,oy+scale*135); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*283,oy+scale*135,ox+scale*273,oy+scale*153); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*273,oy+scale*153,ox+scale*284,oy+scale*198); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*284,oy+scale*198,ox+scale*308,oy+scale*219); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*320,oy+scale*216,ox+scale*317,oy+scale*242); renderer.triangle(ox+scale*198,oy+scale*238,ox+scale*317,oy+scale*242,ox+scale*299,oy+scale*252); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*361,oy+scale*393,ox+scale*294,oy+scale*417); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*294,oy+scale*417,ox+scale*228,oy+scale*390); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*228,oy+scale*390,ox+scale*208,oy+scale*360); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*208,oy+scale*360,ox+scale*213,oy+scale*332); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*213,oy+scale*332,ox+scale*247,oy+scale*325); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*247,oy+scale*325,ox+scale*268,oy+scale*324); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*268,oy+scale*324,ox+scale*301,oy+scale*292); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*301,oy+scale*292,ox+scale*308,oy+scale*261); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*299,oy+scale*252,ox+scale*323,oy+scale*242); renderer.triangle(ox+scale*379,oy+scale*347,ox+scale*323,oy+scale*242,ox+scale*341,oy+scale*252); renderer.setColor(secondaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*220,ox+scale*331,oy+scale*201); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*331,oy+scale*201,ox+scale*330,oy+scale*221); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*330,oy+scale*221,ox+scale*350,oy+scale*214); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*350,oy+scale*214,ox+scale*340,oy+scale*229); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*340,oy+scale*229,ox+scale*359,oy+scale*239); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*359,oy+scale*239,ox+scale*342,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*342,oy+scale*240,ox+scale*351,oy+scale*258); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*303,oy+scale*250,ox+scale*281,oy+scale*251); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*281,oy+scale*251,ox+scale*298,oy+scale*240); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*298,oy+scale*240,ox+scale*282,oy+scale*227); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*282,oy+scale*227,ox+scale*300,oy+scale*229); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*300,oy+scale*229,ox+scale*299,oy+scale*207); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*299,oy+scale*207,ox+scale*310,oy+scale*221); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*310,oy+scale*221,ox+scale*320,oy+scale*204); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*337,oy+scale*250,ox+scale*349,oy+scale*269); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*349,oy+scale*269,ox+scale*331,oy+scale*258); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*331,oy+scale*258,ox+scale*328,oy+scale*279); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*328,oy+scale*279,ox+scale*320,oy+scale*263); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*263,ox+scale*301,oy+scale*275); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*301,oy+scale*275,ox+scale*309,oy+scale*258); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*309,oy+scale*258,ox+scale*289,oy+scale*258); renderer.setColor(tertiaryColour); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*320,oy+scale*224,ox+scale*330,oy+scale*230); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*330,oy+scale*230,ox+scale*334,oy+scale*238); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*334,oy+scale*238,ox+scale*334,oy+scale*248); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*306,oy+scale*248,ox+scale*306,oy+scale*236); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*306,oy+scale*236,ox+scale*311,oy+scale*229); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*311,oy+scale*229,ox+scale*320,oy+scale*224); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*334,oy+scale*248,ox+scale*324,oy+scale*254); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*324,oy+scale*254,ox+scale*315,oy+scale*253); renderer.triangle(ox+scale*320,oy+scale*240,ox+scale*315,oy+scale*253,ox+scale*306,oy+scale*248);
        }

    }
}
